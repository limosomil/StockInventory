/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockinventory;

import com.itextpdf.text.Document;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Collection;
import javafx.scene.control.ComboBox;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.krysalis.barcode4j.impl.code128.Code128Bean;
import org.krysalis.barcode4j.output.bitmap.BitmapCanvasProvider;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.util.Collections;
import java.util.Date;

import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.printing.PDFPageable;
import org.apache.pdfbox.printing.PDFPrintable;
import org.apache.pdfbox.printing.Scaling;

/**
 *
 * @author user
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    DbConnect connect;
    DefaultTableModel dm;
    ResultSet rs,rs2,rs3,rs4;
    Statement st;
    Connection conn =null;
    PreparedStatement pst;
    ArrayList<String> al = new ArrayList<>();
    int temp;

    public Home() throws SQLException {
        initComponents();
        connect = new DbConnect();
        //jButton6.addActionListener(new PrintGUIWindow(jPanel2));
        try 
        {
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/stockinventory","root","");
        } 
        catch (SQLException | ClassNotFoundException ex ) {
            JOptionPane.showMessageDialog(null,"Turn On Xampp");
            System.exit(0);
        }
        loaddate();
        loadid();
        resetDispatch();
        loadYarnCombo();
        loadPartyCombo();
        loadTransportCombo();
        jTextField2.setVisible(false);
        jButton31.addActionListener(new PrintGUIWindow(jPanel6));
        stockSummaryPrint.addActionListener(new PrintGUIWindow(jPanel10));
        jTable3.setShowHorizontalLines(true);
        jTable3.setShowVerticalLines(true);
        jTable3.setGridColor(Color.GRAY);
        //addDummy();
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainpanel = new javax.swing.JPanel();
        AddStock = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        stockid = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        cotton = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        t1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        color1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        rolls1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        wt1 = new javax.swing.JTextField();
        qual = new javax.swing.JComboBox<>();
        returned = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        prtyp = new javax.swing.JLabel();
        prcol = new javax.swing.JLabel();
        prwt = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        adminpanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        newfield = new javax.swing.JTextField();
        ADD = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        newqual = new javax.swing.JTextField();
        addqual = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        qual_append = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        addcolor_yarn = new javax.swing.JComboBox<>();
        addcolor_qual = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<>();
        color_append = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        yarn_append = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        view_inventory = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        categ = new javax.swing.JComboBox<>();
        subcateg = new javax.swing.JComboBox<>();
        colourinv = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        total_roll = new javax.swing.JLabel();
        total_wt = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        customID = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        design_inv = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        date1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel32 = new javax.swing.JLabel();
        date2 = new org.jdesktop.swingx.JXDatePicker();
        jButton39 = new javax.swing.JButton();
        dispatch = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        o1 = new javax.swing.JLabel();
        o2 = new javax.swing.JLabel();
        o3 = new javax.swing.JLabel();
        o5 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        to1 = new javax.swing.JTextField();
        to2 = new javax.swing.JTextField();
        o9 = new javax.swing.JLabel();
        gstin = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        challanNo = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        challandate = new javax.swing.JTextField();
        o10 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        accountof = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        delivery = new javax.swing.JTextField();
        tpcs = new javax.swing.JTextField();
        twt = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        o6 = new javax.swing.JLabel();
        o7 = new javax.swing.JLabel();
        o8 = new javax.swing.JLabel();
        o4 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox<>();
        tyard = new javax.swing.JTextField();
        d1 = new javax.swing.JTextField();
        d2 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        tpcs1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        dispatchid = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        AP1 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        AP2 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        AP3 = new javax.swing.JTextField();
        addparty = new javax.swing.JButton();
        AP5 = new javax.swing.JTextField();
        AP6 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        pID = new javax.swing.JTextField();
        jButton37 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        yFact = new javax.swing.JTextField();
        jButton38 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        invoicelist = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jComboBox6 = new javax.swing.JComboBox<>();
        jLabel50 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        iRollNo = new javax.swing.JTextField();
        date3 = new org.jdesktop.swingx.JXDatePicker();
        jLabel41 = new javax.swing.JLabel();
        date4 = new org.jdesktop.swingx.JXDatePicker();
        jPanel11 = new javax.swing.JPanel();
        sYarn = new javax.swing.JComboBox<>();
        sQual = new javax.swing.JComboBox<>();
        sCol = new javax.swing.JComboBox<>();
        jButton30 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        stockSummaryPrint = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        designInc = new javax.swing.JCheckBox();
        dispatchstats = new javax.swing.JPanel();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        dYarn = new javax.swing.JComboBox<>();
        dQual = new javax.swing.JComboBox<>();
        dCol = new javax.swing.JComboBox<>();
        sidepanel = new javax.swing.JPanel();
        dispatchpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addstockpanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        inventorypanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        adminlabel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(null);

        mainpanel.setBackground(new java.awt.Color(255, 255, 255));
        mainpanel.setMaximumSize(new java.awt.Dimension(680, 750));
        mainpanel.setPreferredSize(new java.awt.Dimension(680, 750));
        mainpanel.setLayout(new java.awt.CardLayout());

        AddStock.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("ROLL No :");

        stockid.setEditable(false);
        stockid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stockid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        stockid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockidActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        cotton.setBackground(new java.awt.Color(255, 255, 255));
        cotton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("QUALITY");

        t1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        t1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t1ItemStateChanged(evt);
            }
        });
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("COLOUR :");

        color1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        color1.setMaximumRowCount(15);
        color1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("DESIGN :");

        rolls1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("WEIGHT :");

        wt1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                wt1KeyPressed(evt);
            }
        });

        qual.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        qual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                qualItemStateChanged(evt);
            }
        });
        qual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qualActionPerformed(evt);
            }
        });

        returned.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        returned.setText("Is This Damaged?");

        javax.swing.GroupLayout cottonLayout = new javax.swing.GroupLayout(cotton);
        cotton.setLayout(cottonLayout);
        cottonLayout.setHorizontalGroup(
            cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cottonLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cottonLayout.createSequentialGroup()
                        .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(qual, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cottonLayout.createSequentialGroup()
                                .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(cottonLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6))
                                    .addGroup(cottonLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(rolls1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)))))
                        .addGap(18, 24, Short.MAX_VALUE)
                        .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(color1, 0, 222, Short.MAX_VALUE)
                            .addComponent(wt1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cottonLayout.createSequentialGroup()
                        .addComponent(returned)
                        .addGap(32, 32, 32))))
        );
        cottonLayout.setVerticalGroup(
            cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cottonLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(qual, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(color1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(cottonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rolls1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(wt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(returned)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(cotton, "card4");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("DATE :");

        date.setEditable(false);
        date.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ADD TO STOCK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(500, 140));
        jPanel2.setMinimumSize(new java.awt.Dimension(200, 140));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 140));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setOpaque(true);

        prtyp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        prtyp.setText("Quality");

        prcol.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        prcol.setText("color");

        prwt.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        prwt.setText("wt");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel23.setText("desc");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel24.setText("fff");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prtyp, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(prcol, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(prwt)
                                    .addGap(57, 57, 57)
                                    .addComponent(jLabel23)
                                    .addGap(41, 41, 41)
                                    .addComponent(jLabel24))))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(prtyp)
                .addGap(2, 2, 2)
                .addComponent(prcol)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prwt)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddStockLayout = new javax.swing.GroupLayout(AddStock);
        AddStock.setLayout(AddStockLayout);
        AddStockLayout.setHorizontalGroup(
            AddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStockLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(AddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddStockLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(stockid, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddStockLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(387, Short.MAX_VALUE))
        );
        AddStockLayout.setVerticalGroup(
            AddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStockLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(AddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(stockid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        mainpanel.add(AddStock, "card4");

        adminpanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel13.setText("ADD NEW YARN :");

        newfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newfieldKeyPressed(evt);
            }
        });

        ADD.setBackground(new java.awt.Color(51, 51, 255));
        ADD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ADD.setForeground(new java.awt.Color(255, 255, 255));
        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newfield, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ADD)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ADD))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel11.setText("ADD QUALITY :");

        jLabel14.setText("SELECT YARN :");

        jLabel15.setText("ENTER QUALITY :");

        newqual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newqualKeyPressed(evt);
            }
        });

        addqual.setBackground(new java.awt.Color(51, 51, 255));
        addqual.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addqual.setForeground(new java.awt.Color(255, 255, 255));
        addqual.setText("ADD");
        addqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addqualActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jButton18.setText("REMOVE");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("UPDATE");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(30, 30, 30)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel11)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addqual, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(newqual))))
                .addGap(18, 18, 18)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(qual_append)
                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qual_append, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(newqual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addqual)
                    .addComponent(jButton18))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setText("ADD COLOURS :");

        addcolor_yarn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addcolor_yarnItemStateChanged(evt);
            }
        });
        addcolor_yarn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcolor_yarnActionPerformed(evt);
            }
        });

        addcolor_qual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addcolor_qualItemStateChanged(evt);
            }
        });
        addcolor_qual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcolor_qualActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "COLOURS"
            }
        ));
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton7.setBackground(new java.awt.Color(51, 51, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("ADD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jButton20.setText("REMOVE");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("UPDATE");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addcolor_yarn, 0, 149, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addcolor_qual, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(color_append)
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addContainerGap(396, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addcolor_yarn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addcolor_qual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color_append, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButton7)
                        .addContainerGap(126, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton20)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new java.awt.Color(0, 0, 0)));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        yarn_append.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yarn_appendActionPerformed(evt);
            }
        });

        jButton16.setText("REMOVE");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("UPDATE");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(yarn_append)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addContainerGap(392, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yarn_append, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jButton17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout adminpanelLayout = new javax.swing.GroupLayout(adminpanel);
        adminpanel.setLayout(adminpanelLayout);
        adminpanelLayout.setHorizontalGroup(
            adminpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminpanelLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminpanelLayout.setVerticalGroup(
            adminpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(190, Short.MAX_VALUE))
        );

        mainpanel.add(adminpanel, "card5");

        view_inventory.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REMOVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode No:", "Date", "Yarn", "Quality", "Design", "Colour", "Rolls", "Weight", "Damaged"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        categ.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        categ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COTTON", "VISCOSE", "POLY", "INDIGO", "MODAL", "TENCEL", "BLENDED", "OTHER" }));
        categ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categItemStateChanged(evt);
            }
        });
        categ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categActionPerformed(evt);
            }
        });

        subcateg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        subcateg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CTN LYCRA", "ANCHOR RIB", "SLUB CTN LYCRA", "VORTEX MELANGE", "VORTEX LYCRA", "VISC LYCRA", "VISC LONG SLUB", "TWILL VISC LYCRA", "MELANGE STRIPS", "VORTEX STRIPES", "ZARA STRIPES", "ZARA STRIPES NAVY COMMON", "VISC CHORDS", "VISC MATTY", "SOFTY SLUB", "DNM LYCRA", "BLACK LABEL", "LYCRA SHIMMER", "DTY STRIPES", "DTY STRIPES NAVY COMMON", "ZODIAC", "SUMMER QUEEN", "SUMMER QUEEN PREMIUM", "GRINDLE GREY MELANGE", "SAMSUNG", "INDIGO", "MODAL COTTON LYCRA", "TENCEL  LYCRA", " ", " ", " " }));
        subcateg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subcategItemStateChanged(evt);
            }
        });
        subcateg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subcategActionPerformed(evt);
            }
        });

        colourinv.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        colourinv.setMaximumRowCount(15);
        colourinv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "*ctn lycra*", "WHITE", "OFF WHITE", "MARRON", "BLACK", "PURPLE", "RANI", "GOLD", "TOMATO", "T.BLUE", "RED", "PINK", "COFFEE", "P.GREEN", "AQUA", "SKIN", "R.BLUE", "MAGENTA", "B.GREEN", "N.BLUE", "BEIGE", "Z.GREEN", "D.PINK", "P.BLUE", "BUTTER", "FUSHIA", "L.LEMON", "MUSTURD GOLD", "F.ORANGE", "F.GREEN", "CHARCOAL", "MEHENDI", "ANTRA MILLAGE", "N.MAGENTA", "N.GOLD", "GRAY MILLANGE", "*VIS VORTEX MLNG*", "ICE BLUE", "R.BLUE", "CORAL", "PINK", "TAFFY", "FUSCHIA", "VIOLET", "C.GREEN", "B.GREEN", "OATMEAL", "COFFEE", "GREY", "ANTRA", "*VIS VTX LYC*", "RED", "BLACK", "WHITE", "OFF WHITE", "SKIN", "MAGENTA", "PINK", "PURPLE", "GOLD", "LEMON", "RANI", "FUSCHIA", "R.BLUE", "Z.GREEN", "P.GREEN", "B.GREEN", "AQUA", "T.BLUE", "COFFEE", "ORANGE", "N.BLUE", "MAROON", "MEHENDI", "TOMATO", "MUSTARD", "KHAKI", "*VISCOSE LYCRA*", "RED", "BLACK", "WHITE", "OFF WHITE", "SKIN", "MAGENTA", "PINK", "PURPLE", "D.PURPLE", "LAVENDER", "GOLD", "LEMON", "RANI", "D.RANI", "R.BLUE", "GREY", "N.BLUE", "P.GREEN", "B.GREEN", "AQUA/RAMA", "Z.GREEN", "MAROON", "D.MAROON", "ORANGE", "COFFEE", "TOMATO", "D.GREY", "T.BLUE", "N.GOLD", "MUSTARD", "ANTRA MELANGE", "MEHENDI", "GREY MELANGE", "*VISC LONG SLUB*", "MUSTARD", "RED", "NAVY", "BLACK", "MEHENDI", "PEACH", "PINK", "*TENCEL  LYCRA*", "RED", "WHITE", "TOMATO", "BLACK", "NAVY", "R. BLUE", "*BLACK LBLL 1-5*", "BLACK", "NAVY", "*MODAL CTN LYCRA*", "RED", "WHITE", "ORANGE", "BLACK", "NAVY", "PINK", "TOMATO", "MUSTARD", "PEACH", "*TWILL VIS LY 72-58*", "WHITE", "ORANGE", "TOMATO", "MUSTARD", "RUST", "B. GREEN", "NAVY", "MAROON", "BLACK", "*LYCRA SHIMMER*", "PEACH", "PINK", "RED", "MUSTARD", "OLIVE", "BLUE", "*DTY ST 2,5*", "BLACK", "NAVY", "*INDIGO*", "4 WAY LYCRA", "RIB LYCRA", "LYCRA", "PLUS\t", "PK", "S/J", "S/J – 170", "BOTTOM", "LOOPER", "STRIPES", "CHECKS", "MAROON S/J", "MUSTARD S/J", "PETROL S/J", "MEHENDI S/J", "MUSTARD PK", "MAROON PK", "MULTI CLR STRIPES", "*MELANGE STRIPES*", "RED", "AQUA", "RANI", "NAVY", "PEACH", "GOLD", "BLACK", "*VORTEX ST 1-3*", "BLACK", "NAVY", "*ZARA ST 2&5*", "BLACK", "NAVY", "TOMATO", "*ZARA STP NY CN*", "PINK", "MUSTARD", "ORANGE", "RED", "AQUA", "*DTY STP NY CMN*", "RED", "RANI", "GOLD", "PEACH", "WHITE", "*VISC CHORDS*", "TOMATO", "MUSTARD", "BLACK", "ORANGE", "NAVY", "*VISC MATTY*", "BLACK", "NAVY", "RED", "MEHENDI", "DARK PINK", "C.GREEN", "MUSTARD", "RUST", "ORANGE", "OFF WHITE", "MINT GREEN", "DUSTY PINK", "B. GREEN", "*SOFTY SLUB*", "PHONE", "GOLD", "SKY BLUE", "MAROON", "BLACK", "ROYAL BLUE", "NAVY", "*DENIM LYCRA*", "BLACK", "NAVY", "MAROON", "MUSTARD", "B. GREEN", "ORANGE", "*ANCHOR RIB*", "OFF WHITE", "MAROON", "BLACK", "WHITE", "PURPLE", "RANI", "ORANGE", "TOMATO", "T. BLUE", "RED", "COFFEE", "P.GREEN", "Z.GREEN", "SKIN", "R.BLUE", "GOLD", "NAVY", "MEHENDI", "MAGENTA", "*SLUB CTTN LYC*", "RED", "MUSTARD", "ORANGE", "NAVY", "BLACK", "*ZODIAC*", "MUSTARD", "NAVY", "BLACK", "PETROL", "PHONE", "WHITE", "TOMATO", "RED", "*SAMSUNG*", "ORANGE", "FUSHIA", "AQUA", "F. GREEN", "NAVY", " ", " ", " ", " ", " " }));
        colourinv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colourinvActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Category");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Sub Category");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Colour");

        jButton3.setBackground(new java.awt.Color(51, 51, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("GET STOCK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("TOTAL :");

        total_roll.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        total_wt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("CUSTOM ID :");

        customID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customIDActionPerformed(evt);
            }
        });
        customID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customIDKeyPressed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(51, 51, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("GET DETAILS ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(51, 51, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("UPDATE DETAILS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Select Row And Press Remove");

        jButton10.setBackground(new java.awt.Color(51, 51, 255));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("PRINT BARCODE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel47.setText("Design");

        jButton23.setText("SUMMARY");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton29.setText("RET/DAMAGED");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jLabel32.setText("TO");

        jButton39.setText("GET STOCK");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout view_inventoryLayout = new javax.swing.GroupLayout(view_inventory);
        view_inventory.setLayout(view_inventoryLayout);
        view_inventoryLayout.setHorizontalGroup(
            view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_inventoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_inventoryLayout.createSequentialGroup()
                        .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(total_roll, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(total_wt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(view_inventoryLayout.createSequentialGroup()
                        .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(view_inventoryLayout.createSequentialGroup()
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categ, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addGap(18, 18, 18)
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(subcateg, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addGap(18, 18, 18)
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(colourinv, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18)
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addGroup(view_inventoryLayout.createSequentialGroup()
                                        .addComponent(design_inv, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton29)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(view_inventoryLayout.createSequentialGroup()
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(view_inventoryLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(customID, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 146, Short.MAX_VALUE)))
                .addContainerGap())
        );
        view_inventoryLayout.setVerticalGroup(
            view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, view_inventoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subcateg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(colourinv)
                    .addComponent(design_inv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4)
                        .addComponent(jButton5))
                    .addComponent(customID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jButton10))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(view_inventoryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total_roll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(total_wt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(view_inventoryLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(view_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton39))))
                .addContainerGap())
        );

        mainpanel.add(view_inventory, "card2");

        dispatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dispatchKeyPressed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setFocusTraversalPolicyProvider(true);
        jPanel6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel6KeyPressed(evt);
            }
        });
        jPanel6.setLayout(null);

        o1.setText("Email : ghewoba1997@gmail.com");
        jPanel6.add(o1);
        o1.setBounds(30, 10, 210, 20);

        o2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        o2.setText("|| Shree Nakoda Bhairavay Namah ||");
        jPanel6.add(o2);
        o2.setBounds(200, 0, 210, 14);

        o3.setText("2207 79 64");
        jPanel6.add(o3);
        o3.setBounds(480, 0, 80, 14);

        o5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        o5.setText("Delivery Challan");
        jPanel6.add(o5);
        o5.setBounds(240, 20, 130, 14);

        jLabel29.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("GHEWOBA KNIT FAB PVT. LTD.");
        jLabel29.setToolTipText("");
        jLabel29.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel6.add(jLabel29);
        jLabel29.setBounds(25, 38, 510, 24);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel30.setText("To ,");

        to1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        to1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        to1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        to1.setNextFocusableComponent(to2);
        to1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to1ActionPerformed(evt);
            }
        });

        to2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        to2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        to2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        to2.setNextFocusableComponent(gstin);
        to2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to2ActionPerformed(evt);
            }
        });

        o9.setText("Buyers's GSTIN :");

        gstin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gstin.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        gstin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gstinActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        jLabel33.setText("Challan No :");

        challanNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel34.setText("Date :");

        challandate.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        challandate.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        challandate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                challandateActionPerformed(evt);
            }
        });

        o10.setText("HSN CODE : 6006");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(challanNo, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(challandate))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(o10)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(challanNo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(challandate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(o10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(o9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gstin, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(to2, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                            .addComponent(to1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(to1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(o9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(gstin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel7);
        jPanel7.setBounds(30, 110, 510, 80);

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("PLEASE RECIEVE THE UNDERMENTIONED GOODS IN GOOD ORDER AND CONDITION");
        jPanel6.add(jLabel35);
        jLabel35.setBounds(40, 190, 500, 14);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox5ItemStateChanged(evt);
            }
        });
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox5);
        jComboBox5.setBounds(140, 210, 360, 20);

        jLabel36.setText("In Account Of : M/s ");
        jPanel6.add(jLabel36);
        jLabel36.setBounds(30, 210, 110, 20);

        accountof.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        accountof.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        accountof.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountofActionPerformed(evt);
            }
        });
        jPanel6.add(accountof);
        accountof.setBounds(140, 210, 360, 15);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Roll No", "Quality", "Color", "Design", "Weight", "Yard"
            }
        ));
        jTable3.setFillsViewportHeight(true);
        jTable3.setGridColor(new java.awt.Color(153, 153, 153));
        jTable3.setRowHeight(12);
        jTable3.setShowHorizontalLines(false);
        jTable3.setShowVerticalLines(false);
        jTable3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable3KeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable3.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTable3.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        jPanel6.add(jScrollPane3);
        jScrollPane3.setBounds(30, 250, 510, 380);

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("Rolls :");
        jPanel6.add(jLabel37);
        jLabel37.setBounds(230, 630, 40, 14);

        jLabel38.setText("Total Wt :");
        jPanel6.add(jLabel38);
        jLabel38.setBounds(340, 630, 60, 14);

        jLabel39.setText("Delivery By :");
        jPanel6.add(jLabel39);
        jLabel39.setBounds(30, 650, 70, 14);

        delivery.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        delivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryActionPerformed(evt);
            }
        });
        jPanel6.add(delivery);
        delivery.setBounds(100, 650, 198, 15);

        tpcs.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tpcs.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        tpcs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpcsActionPerformed(evt);
            }
        });
        jPanel6.add(tpcs);
        tpcs.setBounds(270, 630, 59, 15);

        twt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        twt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twtActionPerformed(evt);
            }
        });
        jPanel6.add(twt);
        twt.setBounds(400, 630, 54, 15);

        jLabel40.setText("Reciever's Signature : _________________");
        jPanel6.add(jLabel40);
        jLabel40.setBounds(310, 650, 230, 14);

        o6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        o6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        o6.setText("Manufacturers Of Circular Knitted Fabrics");
        jPanel6.add(o6);
        o6.setBounds(25, 66, 510, 10);

        o7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        o7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        o7.setText("A-62, TTC Industrial Area, MIDC, Khairne(Opp. Water Effluent Plant) , Navi Mumbai - 400705");
        jPanel6.add(o7);
        o7.setBounds(60, 80, 455, 13);

        o8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        o8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        o8.setText("GSTIN : 27AABCG0212C1ZH");
        jPanel6.add(o8);
        o8.setBounds(30, 90, 510, 20);

        o4.setText("2763 34 90");
        jPanel6.add(o4);
        o4.setBounds(480, 20, 70, 14);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox7ItemStateChanged(evt);
            }
        });
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox7);
        jComboBox7.setBounds(130, 670, 410, 20);

        tyard.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        tyard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tyardActionPerformed(evt);
            }
        });
        jPanel6.add(tyard);
        tyard.setBounds(470, 630, 60, 15);

        d1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel6.add(d1);
        d1.setBounds(100, 230, 440, 15);

        d2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel6.add(d2);
        d2.setBounds(100, 670, 440, 15);

        jLabel51.setText("Address :");
        jPanel6.add(jLabel51);
        jLabel51.setBounds(40, 230, 60, 14);

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel53.setText("Bales :");
        jPanel6.add(jLabel53);
        jLabel53.setBounds(30, 630, 50, 14);

        tpcs1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tpcs1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        tpcs1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpcs1ActionPerformed(evt);
            }
        });
        jPanel6.add(tpcs1);
        tpcs1.setBounds(80, 630, 130, 15);

        jLabel27.setText("Transport :");
        jPanel6.add(jLabel27);
        jLabel27.setBounds(30, 670, 60, 14);

        jLabel46.setText("Enter Roll No :");

        dispatchid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchidActionPerformed(evt);
            }
        });
        dispatchid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dispatchidKeyPressed(evt);
            }
        });

        jButton6.setText("ADD TO LIST");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("REMOVE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("PRINT CHALLAN");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton11.setText("VIEW CHALLAN");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton12.setText("SAVE CHALLAN");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("RESET");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton15.setText("UPDATE ");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel44.setText("M/s :");

        AP1.setNextFocusableComponent(AP2);

        jLabel48.setText("GSTIN :");

        AP2.setNextFocusableComponent(AP3);

        jLabel49.setText("BILLING ADDRESS");

        addparty.setText("ADD PARTY");
        addparty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addpartyActionPerformed(evt);
            }
        });

        AP5.setNextFocusableComponent(AP6);

        AP6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AP6KeyPressed(evt);
            }
        });

        jLabel52.setText("DELIVERY ADDRESS");

        jButton22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton22.setText("INVOICE LIST");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton28.setText("DISPATCH STATS");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton31.setText("jButton31");

        jButton32.setText("DELETE PARTY");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setText("<");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setText(">");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton35.setText("ADD TRANSPORT");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("EDIT PARTY");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jLabel28.setText(" ID :");

        pID.setEditable(false);

        jButton37.setText("CLEAR FIELDS");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jLabel31.setText("ENTER FACTOR FOR YARD :");

        yFact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yFactKeyPressed(evt);
            }
        });

        jButton38.setText("CLEAR YARD");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton38, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addComponent(yFact))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(yFact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton38)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton40.setText("EDIT TRANSPORT");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dispatchLayout = new javax.swing.GroupLayout(dispatch);
        dispatch.setLayout(dispatchLayout);
        dispatchLayout.setHorizontalGroup(
            dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dispatchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dispatchid, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dispatchLayout.createSequentialGroup()
                        .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dispatchLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dispatchLayout.createSequentialGroup()
                                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addparty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton40, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                    .addComponent(jButton36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(AP6)
                            .addComponent(AP5)
                            .addComponent(AP3)
                            .addGroup(dispatchLayout.createSequentialGroup()
                                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(dispatchLayout.createSequentialGroup()
                                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel48)
                                            .addComponent(jLabel44)
                                            .addComponent(jLabel28))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(pID, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AP1)
                                            .addComponent(AP2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel49)
                                    .addComponent(jLabel52))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dispatchLayout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dispatchLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        dispatchLayout.setVerticalGroup(
            dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(dispatchLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dispatchLayout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dispatchid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addGap(90, 90, 90)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton33)
                            .addComponent(jButton34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(jButton13)
                        .addGap(40, 40, 40)
                        .addComponent(jButton31))
                    .addGroup(dispatchLayout.createSequentialGroup()
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(pID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44)
                            .addComponent(AP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(AP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel49)
                        .addGap(18, 18, 18)
                        .addComponent(AP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel52)
                        .addGap(18, 18, 18)
                        .addComponent(AP5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AP6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addparty)
                            .addComponent(jButton36))
                        .addGap(5, 5, 5)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton32)
                            .addComponent(jButton37))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dispatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton35)
                            .addComponent(jButton40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        mainpanel.add(dispatch, "card3");

        invoicelist.setBackground(new java.awt.Color(255, 255, 255));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Challan", "Party Name", "Delivery", "Quality", "Rolls", "Weight", "Yard", "Transport"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable4.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTable4.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTable4.getColumnModel().getColumn(6).setPreferredWidth(30);
        }

        jButton14.setText("SHOW LIST");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jButton14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton14KeyPressed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox6ItemStateChanged(evt);
            }
        });
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        jComboBox6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox6KeyPressed(evt);
            }
        });

        jLabel50.setText("SELECT PARTY :");

        jLabel26.setText("ENTER ROLL NO :");

        iRollNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                iRollNoKeyPressed(evt);
            }
        });

        date3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date3ActionPerformed(evt);
            }
        });

        jLabel41.setText("TO");

        date4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                date4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout invoicelistLayout = new javax.swing.GroupLayout(invoicelist);
        invoicelist.setLayout(invoicelistLayout);
        invoicelistLayout.setHorizontalGroup(
            invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicelistLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoicelistLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1071, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(invoicelistLayout.createSequentialGroup()
                        .addComponent(jButton14)
                        .addGap(29, 29, 29)
                        .addGroup(invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(invoicelistLayout.createSequentialGroup()
                                .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(545, 545, 545))
                            .addGroup(invoicelistLayout.createSequentialGroup()
                                .addGroup(invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(invoicelistLayout.createSequentialGroup()
                                        .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel41)
                                        .addGap(18, 18, 18)
                                        .addComponent(date4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(invoicelistLayout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(iRollNo, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        invoicelistLayout.setVerticalGroup(
            invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicelistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iRollNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicelistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41)
                    .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        mainpanel.add(invoicelist, "card6");

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        sYarn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sYarn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sYarnItemStateChanged(evt);
            }
        });
        sYarn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sYarnKeyPressed(evt);
            }
        });

        sQual.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL" }));
        sQual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sQualItemStateChanged(evt);
            }
        });

        sCol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL" }));
        sCol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sColItemStateChanged(evt);
            }
        });

        jButton30.setText("GO");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jLabel25.setText("NOTE :NOT INCLUDING DAMAGED GOODS");

        stockSummaryPrint.setText("PRINT");
        stockSummaryPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockSummaryPrintActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Yarn", "Quality", "Design", "Colour", "Rolls"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(0).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setResizable(false);
            jTable5.getColumnModel().getColumn(2).setResizable(false);
            jTable5.getColumnModel().getColumn(3).setResizable(false);
            jTable5.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addContainerGap())
        );

        designInc.setText("SORT BY DESIGN");
        designInc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designIncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(sYarn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sQual, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sCol, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(designInc)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jButton30)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                                .addComponent(stockSummaryPrint)))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sYarn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sQual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton30)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stockSummaryPrint))))
                .addGap(1, 1, 1)
                .addComponent(designInc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainpanel.add(jPanel11, "card7");

        dispatchstats.setBackground(new java.awt.Color(255, 255, 255));

        jButton25.setBackground(new java.awt.Color(51, 51, 255));
        jButton25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton25.setForeground(new java.awt.Color(255, 255, 255));
        jButton25.setText("3 MONTH");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setBackground(new java.awt.Color(51, 51, 255));
        jButton26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton26.setForeground(new java.awt.Color(255, 255, 255));
        jButton26.setText("6 MONTH");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setBackground(new java.awt.Color(51, 51, 255));
        jButton27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton27.setForeground(new java.awt.Color(255, 255, 255));
        jButton27.setText("1 YEAR");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Yarn", "Quality", "Design", "Color", "Rolls Dispatched"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable6);
        if (jTable6.getColumnModel().getColumnCount() > 0) {
            jTable6.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton24.setBackground(new java.awt.Color(51, 51, 255));
        jButton24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton24.setForeground(new java.awt.Color(255, 255, 255));
        jButton24.setText("1 MONTH");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        dYarn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dYarn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dYarnItemStateChanged(evt);
            }
        });

        dQual.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL" }));
        dQual.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dQualItemStateChanged(evt);
            }
        });

        dCol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL" }));
        dCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dColActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dispatchstatsLayout = new javax.swing.GroupLayout(dispatchstats);
        dispatchstats.setLayout(dispatchstatsLayout);
        dispatchstatsLayout.setHorizontalGroup(
            dispatchstatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dispatchstatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dispatchstatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 963, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dispatchstatsLayout.createSequentialGroup()
                        .addComponent(jButton24)
                        .addGap(38, 38, 38)
                        .addComponent(jButton25)
                        .addGap(39, 39, 39)
                        .addComponent(jButton26)
                        .addGap(38, 38, 38)
                        .addComponent(jButton27))
                    .addGroup(dispatchstatsLayout.createSequentialGroup()
                        .addComponent(dYarn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dQual, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dCol, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        dispatchstatsLayout.setVerticalGroup(
            dispatchstatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dispatchstatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dispatchstatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton25)
                    .addComponent(jButton26)
                    .addComponent(jButton27)
                    .addComponent(jButton24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dispatchstatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dYarn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dQual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
        );

        mainpanel.add(dispatchstats, "card8");

        getContentPane().add(mainpanel);
        mainpanel.setBounds(179, 0, 1110, 700);

        sidepanel.setBackground(new java.awt.Color(0, 102, 255));

        dispatchpanel.setBackground(new java.awt.Color(0, 102, 255));
        dispatchpanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dispatchpanelMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dispatch");

        javax.swing.GroupLayout dispatchpanelLayout = new javax.swing.GroupLayout(dispatchpanel);
        dispatchpanel.setLayout(dispatchpanelLayout);
        dispatchpanelLayout.setHorizontalGroup(
            dispatchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dispatchpanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dispatchpanelLayout.setVerticalGroup(
            dispatchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dispatchpanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        addstockpanel.setBackground(new java.awt.Color(0, 102, 255));
        addstockpanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addstockpanelMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add Stock");

        javax.swing.GroupLayout addstockpanelLayout = new javax.swing.GroupLayout(addstockpanel);
        addstockpanel.setLayout(addstockpanelLayout);
        addstockpanelLayout.setHorizontalGroup(
            addstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addstockpanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addstockpanelLayout.setVerticalGroup(
            addstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addstockpanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(21, 21, 21))
        );

        inventorypanel.setBackground(new java.awt.Color(0, 102, 255));
        inventorypanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventorypanelMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("View Inventory");

        javax.swing.GroupLayout inventorypanelLayout = new javax.swing.GroupLayout(inventorypanel);
        inventorypanel.setLayout(inventorypanelLayout);
        inventorypanelLayout.setHorizontalGroup(
            inventorypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventorypanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(13, 13, 13))
        );
        inventorypanelLayout.setVerticalGroup(
            inventorypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventorypanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        adminlabel.setBackground(new java.awt.Color(0, 102, 255));
        adminlabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminlabelMouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Admin ");

        javax.swing.GroupLayout adminlabelLayout = new javax.swing.GroupLayout(adminlabel);
        adminlabel.setLayout(adminlabelLayout);
        adminlabelLayout.setHorizontalGroup(
            adminlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminlabelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(46, 46, 46))
        );
        adminlabelLayout.setVerticalGroup(
            adminlabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminlabelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel12)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sidepanelLayout = new javax.swing.GroupLayout(sidepanel);
        sidepanel.setLayout(sidepanelLayout);
        sidepanelLayout.setHorizontalGroup(
            sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dispatchpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addstockpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inventorypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adminlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        sidepanelLayout.setVerticalGroup(
            sidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidepanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(adminlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addstockpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(dispatchpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inventorypanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(319, 319, 319))
        );

        getContentPane().add(sidepanel);
        sidepanel.setBounds(0, 0, 180, 700);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void addDummy() throws SQLException
    {
        long time;
        time=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
        String d=sdf.format(time);
        for(int i=1;i<=10000;i++)
        {
            pst=conn.prepareStatement("insert into stock (date,stockid,category,subcateg,description,color,rolls,kg,returned) values ('"+d+"','"+i+"','COTTON','CTN LYCRA','1','RED',1,45.5,0)");
            int l=pst.executeUpdate();
        }
        JOptionPane.showMessageDialog(null,"Added To Stock");
        
    }
    private void savedata() throws SQLException, ParseException
    {
        String t="",col="";
        int roll=1;
        String weight="";
        int i=0;
        String prc="",desc="",quality;        
        quality=qual.getSelectedItem().toString();
        t=t1.getSelectedItem().toString();       
        col=color1.getSelectedItem().toString();      
        desc=rolls1.getText();
        weight=wt1.getText();
        long time;
        time=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
        String d=sdf.format(time); 
        int id=Integer.parseInt(stockid.getText());
        int damaged=0;
        if (returned.isSelected())
            damaged=1;
        else
            damaged=0;
        try 
        {
            pst=conn.prepareStatement("insert into stock (date,stockid,category,subcateg,description,color,rolls,kg,returned) values ('"+d+"','"+id+"','"+quality+"','"+t+"','"+desc+"','"+col+"','"+roll+"','"+weight+"','"+damaged+"')");
            int l=pst.executeUpdate();
            pst=conn.prepareStatement("update currentroll set roll='"+id+"' where id=1");
            int l2=pst.executeUpdate();
            if(l>0 && l2>0)
            {
                prcol.setText(col);
                prtyp.setText(t);
                jLabel23.setText(desc);
                prwt.setText(weight+"KG");
                if (damaged==1)
                    jLabel24.setText("F");
                else
                    jLabel24.setText("");
                JOptionPane.showMessageDialog(null,"Added To Stock");
                genBarcode();
                PrintFrameToPDF(jPanel2,stockid.getText());
                //JOptionPane.showMessageDialog(null,"Please Enter  Weight");
                letsPrint(stockid.getText());
            }
        }
         catch(Exception e)
        {
            System.out.println("Error"+e);
        }
        
    }
   private void letsPrint(String s) throws IOException, PrinterException
   {
        PDDocument document = PDDocument.load(new File("lib/BarcodePdf/"+s+".pdf"));

        /*PrintService myPrintService = findPrintService("Argox CP-2140 PPLA");
       
       // PDFPrintable printable = new PDFPrintable(document, Scaling.SHRINK_TO_FIT);


        PrinterJob job = PrinterJob.getPrinterJob();
        
        //documjob.setOption("print.scaling","Fit");
        //job.setPrintable(printable);
        job.setPrintService(myPrintService);
        //job.print();
        job.setPageable(new PDFPageable(document));
        
        job.print();
        document.close();*/
        
    PrinterJob job = PrinterJob.getPrinterJob();

    // define custom paper
    Paper paper = new Paper();
    paper.setSize(167.24376, 198.42552); // 1/72 inch
    paper.setImageableArea(0, 0, paper.getWidth(), paper.getHeight()); // no margins

    // custom page format
    PageFormat pageFormat = new PageFormat();
    pageFormat.setPaper(paper);

    // override the page format
    Book book = new Book();
    // append all pages
    book.append(new PDFPrintable(document, Scaling.SHRINK_TO_FIT), pageFormat, document.getNumberOfPages());
    job.setPageable(book);

    job.print();
    document.close();
   }
   private static PrintService findPrintService(String printerName) {
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
        for (PrintService printService : printServices) {
            if (printService.getName().trim().equals(printerName)) {
                return printService;
            }
        }
        return null;
    }
    private void reset()
    {
        
        rolls1.setText("");
        
        wt1.setText("");
        
        returned.setSelected(false);
    }
    public void loaddate(){

        long t;
        t=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
        String d=sdf.format(t);
        date.setText(d);
        challandate.setText(d);
        Date d1= new Date();
        date1.setDate(d1);
        date2.setDate(d1);
        date3.setDate(d1);
        date4.setDate(d1);
        

    }
    public void loadid()
    {
       // Generating new patient opd
        int new_id=0;
        try
        {
            rs = connect.genID();
            if (rs.next())
            {
             new_id=rs.getInt("roll");// Getting the value of the previous opd
             new_id++; // Increasing by 1 to get the new opd
            }
        }
        catch(Exception ex){
                        System.out.println("ERROE AT LOADID"+ex);
        }
        //cmbopdno3.setModel(new DefaultComboBoxModel(list.toArray()));
        stockid.setText(Integer.toString(new_id));
        //stockid.setText(Integer.toString(12670));
    }
    public void loadChallanId()
    {
       // Generating new patient opd
        String type;
        
        
        
            if(jLabel29.getText().equals("GKF"))
                type="dispatch2";
            else
                type="dispatch";
        int new_id=0;
        try
        {
            rs = connect.challanID(type);
            while (rs.next())
            {
             new_id=rs.getInt("max(challan_no)");// Getting the value of the previous opd
             new_id++; // Increasing by 1 to get the new opd
            }
        }
        catch(Exception ex){
                        System.out.println("Here is not the error"+ex);
        }
        //cmbopdno3.setModel(new DefaultComboBoxModel(list.toArray()));
        temp=new_id;
        challanNo.setText(Integer.toString(new_id));
//        stockid.setText(Integer.toString(7776999));
    }
    private void addstockpanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addstockpanelMouseClicked
        mainpanel.removeAll();
        mainpanel.add(AddStock);
        mainpanel.repaint();
        mainpanel.revalidate();
        setColor(addstockpanel);
        resetColor(dispatchpanel);
        resetColor(inventorypanel);
        resetColor(adminlabel);
       
        loadid();
    }//GEN-LAST:event_addstockpanelMouseClicked

    private void dispatchpanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dispatchpanelMouseClicked
        mainpanel.removeAll();
        mainpanel.add(dispatch);
        mainpanel.repaint();
        mainpanel.revalidate();
        resetColor(addstockpanel);
        setColor(dispatchpanel);
        resetColor(inventorypanel);
        resetColor(adminlabel);
       
    }//GEN-LAST:event_dispatchpanelMouseClicked
void loadPartyCombo()
{
    try
    {
        rs=connect.getParty();
        ArrayList<String> list = new ArrayList<>();
       
        while(rs.next())
        {
             
            list.add(rs.getString("pName"));
        }
        
        Collections.sort(list);
        jComboBox5.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox6.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox5.setSelectedIndex(0);
    }
    catch (Exception e)
    {
        System.out.println("Error at load party");
    }
}
void loadTransportCombo()
{
    try
    {
        rs=connect.getTrans();
        ArrayList<String> list = new ArrayList<>();
       
        while(rs.next())
        {
             
            list.add(rs.getString("name"));
        }
        
        Collections.sort(list);
        jComboBox7.setModel(new DefaultComboBoxModel(list.toArray()));
        if(!list.isEmpty())
            jComboBox7.setSelectedIndex(0);
    }
    catch (Exception e)
    {
        System.out.println("Error at load transport");
    }
}
    private void inventorypanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventorypanelMouseClicked
        mainpanel.removeAll();
        mainpanel.add(view_inventory);
        mainpanel.repaint();
        mainpanel.revalidate();
        resetColor(addstockpanel);
        resetColor(dispatchpanel);
        setColor(inventorypanel);
        resetColor(adminlabel);
    }//GEN-LAST:event_inventorypanelMouseClicked

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
       if(t1.getSelectedItem()!=null)
       {
        String y = t1.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadcolor(y);
        color1.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        color1.setModel(new DefaultComboBoxModel(list.toArray()));
        color1.setSelectedIndex(0);
       }
    }//GEN-LAST:event_t1ActionPerformed

    private void color1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_color1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_color1ActionPerformed
    private void genBarcode()
    {
        try {
                String image_name=stockid.getText(),myString=stockid.getText();
                        
		Code128Bean code128 = new Code128Bean();
		code128.setHeight(7f);
		code128.setModuleWidth(0.2);
		code128.setQuietZone(1);
		code128.doQuietZone(true);
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		BitmapCanvasProvider canvas = new BitmapCanvasProvider(baos, "image/x-png", 300, BufferedImage.TYPE_BYTE_BINARY, false, 0);
		code128.generateBarcode(canvas, myString);
		canvas.finish();
		//write to png file
		FileOutputStream fos = new FileOutputStream("lib\\Barcodes\\"+image_name+".png");
		fos.write(baos.toByteArray());
		fos.flush();
		fos.close();
                ImageIcon iconLogo = new ImageIcon("lib/Barcodes/"+image_name+".png");
                jLabel21.setIcon(iconLogo);
                //jLabel21 = new JLabel(new ImageIcon(getClass().getResource("/Barcodes/19.png")));
		} catch (Exception e) {
			// TODO: handle exception
		}
    }
    public void PrintFrameToPDF(JPanel bill,String s)  {
    try {

        Document d = new Document();
        Rectangle r=new Rectangle(270,160);
        d.setPageSize(r);
        PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream ("lib\\BarcodePdf\\"+s+".pdf"));
        d.open ();

        PdfContentByte cb = writer.getDirectContent();
        //PdfTemplate template = cb.createTemplate(700, 700);
        Graphics2D g2d = cb.createGraphics(270,160);
        bill.print(g2d);
        
        bill.addNotify();
        bill.validate();
        g2d.dispose();

        d.close ();
    }
    catch(Exception e)  {
        System.out.println(e);
    }
    }
    public void PrintFrameToPDF2(JPanel bill,String s)  {
    try {

        Document d = new Document();
        Rectangle r=new Rectangle(550,700);
        d.setPageSize(r);
        PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream ("lib\\Dispatch\\"+s+".pdf"));
        d.open ();

        PdfContentByte cb = writer.getDirectContent();
        //PdfTemplate template = cb.createTemplate(700, 700);
        Graphics2D g2d = cb.createGraphics(550,700);
        bill.print(g2d);
        
        bill.addNotify();
        bill.validate();
        g2d.dispose();

        d.close ();
    }
    catch(Exception e)  {
        System.out.println(e);
    }
    }
     private void letsPrint2(String s) throws IOException, PrinterException
   {
        PDDocument document = PDDocument.load(new File("lib/Dispatch/"+s+".pdf"));

        /*PrintService myPrintService = findPrintService("Argox CP-2140 PPLA");
       
       // PDFPrintable printable = new PDFPrintable(document, Scaling.SHRINK_TO_FIT);


        PrinterJob job = PrinterJob.getPrinterJob();
        
        //documjob.setOption("print.scaling","Fit");
        //job.setPrintable(printable);
        job.setPrintService(myPrintService);
        //job.print();
        job.setPageable(new PDFPageable(document));
        
        job.print();
        document.close();*/
        
    PrinterJob job = PrinterJob.getPrinterJob();

    // define custom paper
    Paper paper = new Paper();
    paper.setSize(540.56, 680.328); // 1/72 inch
    paper.setImageableArea(0, 0, paper.getWidth(), paper.getHeight()); // no margins

    // custom page format
    PageFormat pageFormat = new PageFormat();
    pageFormat.setPaper(paper);

    // override the page format
    Book book = new Book();
    // append all pages
    book.append(new PDFPrintable(document, Scaling.SCALE_TO_FIT), pageFormat, document.getNumberOfPages());
    job.setPageable(book);

    job.print();
    document.close();
   }
  public void printComponenet(JPanel jPanel2){
  PrinterJob pj = PrinterJob.getPrinterJob();
  pj.setJobName(" Print Component ");

  pj.setPrintable (new Printable() {    
    public int print(Graphics pg, PageFormat pf, int pageNum){
      if (pageNum > 0){
      return Printable.NO_SUCH_PAGE;
      }

      Graphics2D g2 = (Graphics2D) pg;
      g2.translate(pf.getImageableX(), pf.getImageableY());
      jPanel2.paint(g2);
      return Printable.PAGE_EXISTS;
    }
  });
  if (pj.printDialog() == false)
  return;

  try {
        pj.print();
  } catch (PrinterException ex) {
        // handle exception
  }
}
 public boolean checkInput()
 {
     try
     {
         double d=Double.parseDouble(wt1.getText());
         return true;
     }
     catch (Exception e)
     {
         return false;
     }
 }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(wt1.getText().equals("") )
        {
            JOptionPane.showMessageDialog(null,"Please Enter  Weight");
            
        }
        else if(checkInput()==false)
        {
             JOptionPane.showMessageDialog(null,"Invalid Input Value For Weight");
        }
        else
        {
           
            try {
                savedata();
                
                
                
               // printbtn.doClick();
               // printComponent(jPanel2,true);
                
                //printing
                loadid();
                reset();
                
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public void Populate(int stid,String date, String cat,String subcat,String desc , String colour,int roll,String wt,String ret)
    {
         dm=(DefaultTableModel) jTable1.getModel();
         //Add Rows
         String[] rowData={Integer.toString(stid),date,cat,subcat,desc,colour,Integer.toString(roll),wt,ret};
         dm.addRow(rowData);
    }
    public void Populate2(int stid,String subcat, String colour,String desc ,String wt,String yard)
    {
         dm=(DefaultTableModel) jTable3.getModel();
         //Add Rows
         
         String[] rowData={Integer.toString(stid),subcat,colour,desc,wt,yard};
         dm.addRow(rowData);
         loadRollWeight();
    }
    public void Populate3(String date, String challan_no,String party,String del,String qual,String rolls,String wt,String yd,String delby)
    {
         dm=(DefaultTableModel) jTable4.getModel();
         //Add Rows
         
         String[] rowData={date,challan_no,party,del,qual,rolls,wt,yd,delby};
         dm.addRow(rowData);
         
    }
    public void Populate4(String yarn, String qual,String desc,String color,String count)
    {
         dm=(DefaultTableModel) jTable5.getModel();
         //Add Rows
         
         String[] rowData={yarn,qual,desc,color,count};
         dm.addRow(rowData);
         
    }
    public void Populate5(String yarn, String qual,String desc,String color,String count)
    {
         dm=(DefaultTableModel) jTable6.getModel();
         //Add Rows
         
         String[] rowData={yarn,qual,desc,color,count};
         dm.addRow(rowData);
         
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        customID.setText("");
        dm=(DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
        String category=categ.getSelectedItem().toString();
        String subcategory=subcateg.getSelectedItem().toString();
        String color=colourinv.getSelectedItem().toString();
        String design=design_inv.getText();
        boolean b=false;
        if(color.equals("ALL"))
            b=true;
        
        
        int stid=0,rolls=0,ret=0;
        String subc="",col="",desc="",cate="",wt,date="";
        try
        {   
            if(design.equals(""))
            {
              
            rs = connect.Inventory(category,subcategory,color,b);
            }
            else
            {
              
            rs = connect.Inventory2(category,subcategory,color,design,b);
            }
            while (rs.next())
            {
                date=rs.getString("date");
                stid=rs.getInt("stockid");
                cate=rs.getString("category");
                subc=rs.getString("subcateg");
                desc=rs.getString("description");
                col=rs.getString("color");
                rolls=rs.getInt("rolls");
                wt=rs.getString("kg");
                ret=rs.getInt("returned");
                String c="",t="";
                
                if(ret==1)
                    t="Yes";
                else
                    t="No";
                Populate(stid,date,cate,subc,desc,col,rolls,wt,t);
                dm=(DefaultTableModel) jTable1.getModel();
                int row=jTable1.getRowCount();
                int r=0;
                double w=0;
                for (int m=0;m<row;m++)
                {
                    r=r+Integer.parseInt(jTable1.getValueAt(m,6).toString());
                    w=w+Double.parseDouble(jTable1.getValueAt(m,7).toString());
                }
                w=Math.round(w*1000.0)/1000.0;
                total_roll.setText(Integer.toString(r));
                total_wt.setText(Double.toString(w));
            }
        }
        catch(Exception ex){
                        System.out.println(ex);
                        JOptionPane.showMessageDialog(null,ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void stockidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockidActionPerformed
    public static void printComponent(JPanel jp, boolean fill) throws PrinterException {
        PrinterJob pjob = PrinterJob.getPrinterJob();
        PageFormat pf = pjob.defaultPage();
        pf.setOrientation(PageFormat.LANDSCAPE);

        PageFormat postformat = pjob.pageDialog(pf);
        if (pf != postformat) {
            //Set print component
            pjob.setPrintable(new ComponentPrinter(jp, fill), postformat);
            if (pjob.printDialog()) {
                pjob.print();
            }
        }    
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(!jTable1.getSelectionModel().isSelectionEmpty())
        {
        dm=(DefaultTableModel) jTable1.getModel();
        String id=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
        try {
            pst=conn.prepareStatement("delete  from stock where stockid='"+id+"' ");
            int l=pst.executeUpdate();
            if(l>0)
            {
                dm.setRowCount(0);
                JOptionPane.showMessageDialog(null,"Removed!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        else 
        {
            JOptionPane.showMessageDialog(null,"Please Select Row To Remove.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void loadYarnCombo() throws SQLException
    {
        
        qual.removeAllItems();
        categ.removeAllItems();
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        addcolor_yarn.removeAllItems();
        dYarn.removeAllItems();
        sYarn.removeAllItems();
        
        rs=connect.loadyarn();
        String q;
        ArrayList<String> list = new ArrayList<>();
        ArrayList<String> list2 = new ArrayList<>();
        list2.add("ALL");
        try
        {
        while(rs.next())
        {
             q=rs.getString("yarnname");
            list.add(q);
            list2.add(q);
        }
        }
        catch(Exception e)
        {
            System.out.println("load yarn "+e);
        }
        
        qual.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox1.setModel(new DefaultComboBoxModel(list.toArray()));
        categ.setModel(new DefaultComboBoxModel(list.toArray()));
        addcolor_yarn.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox2.setModel(new DefaultComboBoxModel(list.toArray()));
        dYarn.setModel(new DefaultComboBoxModel(list2.toArray()));
        dYarn.setSelectedIndex(0);
        sYarn.setModel(new DefaultComboBoxModel(list2.toArray()));
        sYarn.setSelectedIndex(0);
        qual.setSelectedIndex(0);
        jComboBox1.setSelectedIndex(0);
        categ.setSelectedIndex(0);
        addcolor_yarn.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        
        
        
    }
    
    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        String s=newfield.getText().toUpperCase();
        if(!s.equals(""))
        {
            try {
                pst=conn.prepareStatement("insert into yarn (yarnname) values('"+s+"') ");
                int i=pst.executeUpdate();
                if(i>0)
                {
                    newfield.setText("");
                    JOptionPane.showMessageDialog(null,"Added New Yarn");
                    
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                loadYarnCombo();
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ADDActionPerformed

    private void adminlabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminlabelMouseClicked
        mainpanel.removeAll();
        mainpanel.add(adminpanel);
        mainpanel.repaint();
        mainpanel.revalidate();
        resetColor(addstockpanel);
        resetColor(dispatchpanel);
        resetColor(inventorypanel);
        setColor(adminlabel);
       
    }//GEN-LAST:event_adminlabelMouseClicked

    private void wt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wt1KeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        jButton2.doClick();
    }//GEN-LAST:event_wt1KeyPressed

    private void colourinvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colourinvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colourinvActionPerformed

    private void customIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customIDActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int stid=Integer.parseInt(customID.getText());
         dm=(DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
        int id=0,rolls=0,ret=0;
        String subc="",col="",desc="",cate="",wt,date;
        rs = connect.rollDet(stid);
        try {
            if(rs.next())
            {
                id=rs.getInt("stockid");
                date=rs.getString("date");
                cate=rs.getString("category");
                subc=rs.getString("subcateg");
                desc=rs.getString("description");
                col=rs.getString("color");
                rolls=rs.getInt("rolls");
                wt=rs.getString("kg");
                ret=rs.getInt("returned");
                String c="",t="";
                
                if(ret==1)
                    t="Yes";
                else
                    t="No";
                Populate(id,date,cate,subc,desc,col,rolls,wt,t);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int id,rolls,ret;
        String subc,col,desc,cate,ret2;
        String wt;
        dm=(DefaultTableModel) jTable1.getModel();
        int selected=jTable1.getSelectedRow();
        id=Integer.parseInt(jTable1.getValueAt(selected,0).toString());
        cate=jTable1.getValueAt(selected,2).toString();
        subc=jTable1.getValueAt(selected,3).toString();
        desc=jTable1.getValueAt(selected,4).toString();
        col=jTable1.getValueAt(selected,5).toString();
        rolls=Integer.parseInt(jTable1.getValueAt(selected,6).toString());
        wt=jTable1.getValueAt(selected,7).toString();
        ret2=jTable1.getValueAt(selected,8).toString();
        if(ret2.toUpperCase().equals("YES"))
            ret=1;
        else 
            ret=0;
        {
            try {
                pst=conn.prepareStatement("update stock set category=? ,subcateg=?, description=?,color=?, rolls=? ,kg=?, returned=?  where stockid='"+id+"' ");
                pst.setString(1, cate);
                pst.setString(2,subc);
                pst.setString(3,desc);
                pst.setString(4,col);
                pst.setInt(5,rolls);
                pst.setString(6,wt);
                pst.setInt(7,ret);
                int l=pst.executeUpdate();
                 if(l>0)
            {
               
                JOptionPane.showMessageDialog(null,"Updated Stock");
            }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
              
             
            
           
        }
         
    }//GEN-LAST:event_jButton5ActionPerformed

    private void newfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newfieldKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        ADD.doClick();

    }//GEN-LAST:event_newfieldKeyPressed

    private void addqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addqualActionPerformed
       String s=newqual.getText().toUpperCase();
       String y=jComboBox1.getSelectedItem().toString();
        if(!s.equals(""))
        {
            try {
                pst=conn.prepareStatement("insert into quality (yarn,quality_name) values('"+y+"','"+s+"') ");
                int i=pst.executeUpdate();
                if(i>0)
                {
                    newqual.setText("");
                    JOptionPane.showMessageDialog(null,"Added New Quality");
                    
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } 
    }//GEN-LAST:event_addqualActionPerformed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        dm=(DefaultTableModel) jTable2.getModel();
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
            dm.addRow(new Object[]{""});
    }//GEN-LAST:event_jTable2KeyPressed

    private void addcolor_qualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcolor_qualActionPerformed
        if(addcolor_qual.getSelectedItem()!=null)
       {
        String y = addcolor_qual.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadcolor(y);
        jComboBox4.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox4.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox4.setSelectedIndex(0);
       }
    }//GEN-LAST:event_addcolor_qualActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String y=addcolor_yarn.getSelectedItem().toString();
        String q=addcolor_qual.getSelectedItem().toString();
        dm=(DefaultTableModel) jTable2.getModel();
        int r=jTable2.getRowCount();
        String col;
        
        for(int i=0;i<r;i++)
        {
            col=jTable2.getValueAt(i,0).toString().toUpperCase();
            if(!col.equals(""))
            {
            try
            {
                pst=conn.prepareStatement("insert into color (quality,color) values ('"+q+"','"+col+"')");
                int l=pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        }
        dm.setRowCount(0);
        dm.addRow(new Object[]{""});
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void qualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qualActionPerformed
        if(qual.getSelectedItem()!=null)
        {
        String y = qual.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        t1.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        t1.setModel(new DefaultComboBoxModel(list.toArray()));
        t1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_qualActionPerformed

    private void newqualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newqualKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        addqual.doClick();
    }//GEN-LAST:event_newqualKeyPressed

    private void addcolor_yarnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcolor_yarnActionPerformed
        if(addcolor_yarn.getSelectedItem()!=null)
        {
        String y = addcolor_yarn.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        addcolor_qual.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        addcolor_qual.setModel(new DefaultComboBoxModel(list.toArray()));
        addcolor_qual.setSelectedIndex(0);
        }
    }//GEN-LAST:event_addcolor_yarnActionPerformed

    private void qualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_qualItemStateChanged
        if(qual.getSelectedItem()!=null)
        {
        String y = qual.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        t1.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        t1.setModel(new DefaultComboBoxModel(list.toArray()));
        t1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_qualItemStateChanged

    private void t1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t1ItemStateChanged
        if(t1.getSelectedItem()!=null)
       {
        String y = t1.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadcolor(y);
        color1.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        color1.setModel(new DefaultComboBoxModel(list.toArray()));
        if(!list.isEmpty())
        color1.setSelectedIndex(0);
       }
    }//GEN-LAST:event_t1ItemStateChanged

    private void addcolor_yarnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addcolor_yarnItemStateChanged
         if(addcolor_yarn.getSelectedItem()!=null)
        {
        String y = addcolor_yarn.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        addcolor_qual.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        addcolor_qual.setModel(new DefaultComboBoxModel(list.toArray()));
        addcolor_qual.setSelectedIndex(0);
        }
    }//GEN-LAST:event_addcolor_yarnItemStateChanged

    private void categActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categActionPerformed
        if(categ.getSelectedItem()!=null)
        {
        String y = categ.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        subcateg.removeAllItems();
        
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        subcateg.setModel(new DefaultComboBoxModel(list.toArray()));
        subcateg.setSelectedIndex(0);
        }
    }//GEN-LAST:event_categActionPerformed

    private void categItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categItemStateChanged
       if(categ.getSelectedItem()!=null)
        {
        String y = categ.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        subcateg.removeAllItems();
        
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        subcateg.setModel(new DefaultComboBoxModel(list.toArray()));
        subcateg.setSelectedIndex(0);
        }
    }//GEN-LAST:event_categItemStateChanged

    private void subcategActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subcategActionPerformed
          if(subcateg.getSelectedItem()!=null)
       {
        String y = subcateg.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadcolor(y);
        colourinv.removeAllItems();
        list.add("ALL");
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        colourinv.setModel(new DefaultComboBoxModel(list.toArray()));
        colourinv.setSelectedIndex(0);
       }
    }//GEN-LAST:event_subcategActionPerformed

    private void subcategItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subcategItemStateChanged
        if(subcateg.getSelectedItem()!=null)
       {
        String y = subcateg.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadcolor(y);
        colourinv.removeAllItems();
        list.add("ALL");
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        colourinv.setModel(new DefaultComboBoxModel(list.toArray()));
        colourinv.setSelectedIndex(0);
       }
    }//GEN-LAST:event_subcategItemStateChanged

    private void customIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customIDKeyPressed
          if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        jButton4.doClick();
    }//GEN-LAST:event_customIDKeyPressed

    private void gstinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gstinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gstinActionPerformed

    private void accountofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountofActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountofActionPerformed

    private void twtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_twtActionPerformed

    private void challandateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_challandateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_challandateActionPerformed

    private void dispatchidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dispatchidActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    jComboBox5.setVisible(false);
    jComboBox7.setVisible(false);
    String a=to1.getText();
    String b=a;
    a=a.replace(" ","   ");
    String a1=accountof.getText();
    String b1=a1;
    a1=a1.replace(" ","   ");
    to1.setText(a);
    accountof.setText(a1);
    if(tyard.getText().equals("0"))
        tyard.setVisible(false);
    jButton31.doClick();
    jComboBox5.setVisible(true);
    jComboBox7.setVisible(true);
    tyard.setVisible(true);
    to1.setText(b);
    accountof.setText(b1);
    
    
        /*        try {
            print();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PrinterException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jButton9ActionPerformed
    void loadRollWeight()
    {
        dm=(DefaultTableModel) jTable3.getModel();
        double wt=0.0;
        int roll=0;
        double yard=0.0;
        for(int i=0;i<jTable3.getRowCount();i++)
        {
            wt=wt+Double.parseDouble(jTable3.getValueAt(i,4).toString());
            roll++;
            
            if(!jTable3.getValueAt(i,5).toString().equals(""))
                yard=yard+Double.parseDouble(jTable3.getValueAt(i,5).toString());
            //System.out.println(wt);
        }
        wt=Math.round(wt * 1000.0) / 1000.0;
        yard=Math.round(yard * 100.0) / 100.0;
        String weight=Double.toString(wt);
        weight=modifyString(weight,3);
        String yd=Double.toString(yard);
        yd=modifyString(yd,2);
        tpcs.setText(Integer.toString(roll));
        twt.setText(weight);
        tyard.setText(yd);
    }
    public String modifyString(String s,int n)
    {
        int in=s.indexOf('.');
        String a=s.substring(in+1);
        int l=a.length();
        for(int i=1;i<=n-l;i++)
        {
            s=s+"0";
        }
        return s;
    }
    public  boolean checkRollNo(int id)
    {
        dm=(DefaultTableModel) jTable3.getModel();
        int rows=dm.getRowCount();
        for(int i=0;i<rows;i++)
        {
            if(Integer.parseInt(jTable3.getValueAt(i,0).toString())==id)
                return true;
        }
        return false;

    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        
        
            if(dispatchid.getText().equals("") || dispatchid.getText()==null)
                return;
            dm=(DefaultTableModel) jTable3.getModel();
            int r=dm.getRowCount();
            if(r>=29)
            {
                JOptionPane.showMessageDialog(null,"MAXIMUM ROLLS REACHED");
                dispatchid.setText("");
                return;
            }
            
            int stid=Integer.parseInt(dispatchid.getText());
            if(stid==0)
            {
                Populate2(0,"","","","0","");
                al.add("");
                dispatchid.setText("");
                return;
            }
            //check if exists
            boolean chk=checkRollNo(stid);
            if(chk==true)
            {
                JOptionPane.showMessageDialog(null,"ROLL ALREADY EXISTS");
                dispatchid.setText("");
                return;
            }
             

            int id=0,rolls=0,ret=0;
            double w;
            String subc,col,desc,wt,cate;
            rs = connect.rollDet2(stid);
            try {
                if(rs.next())
                {
                    id=rs.getInt("stockid");
                    cate=rs.getString("category");
                    al.add(cate);
                    subc=rs.getString("subcateg");
                    desc=rs.getString("description");
                    col=rs.getString("color");
    //                rolls=rs.getInt("rolls");
                    wt=rs.getString("kg");

                    ret=rs.getInt("returned");
                    

                    Populate2(id,subc,col,desc,wt,"");
                    if(ret==1)
                        JOptionPane.showMessageDialog(null,"DAMAGED ROLL");
                }
                dispatchid.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTable3.setAutoCreateRowSorter(true);
        
    }//GEN-LAST:event_jButton6ActionPerformed
public void addRowToStock()
{
        dm=(DefaultTableModel) jTable3.getModel();
        int row=jTable3.getSelectedRow();
        String t="",col="";
        int roll=1;
        String weight="";
        int i=0;
        String prc="",desc="",quality;
        int id=Integer.parseInt(jTable3.getValueAt(row,0).toString());
        t=jTable3.getValueAt(row,1).toString();
        quality=al.get(row);
        col=jTable3.getValueAt(row,2).toString();        
        desc=jTable3.getValueAt(row,3).toString();
        weight=jTable3.getValueAt(row,4).toString();
        long time;
        time=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
        String d=sdf.format(time);
        
        
        int damaged=0;
        if (returned.isSelected())
            damaged=1;
        else
            damaged=0;
        try 
        {
            pst=conn.prepareStatement("insert into stock (date,stockid,category,subcateg,description,color,rolls,kg,returned) values ('"+d+"','"+id+"','"+quality+"','"+t+"','"+desc+"','"+col+"','"+roll+"','"+weight+"','"+damaged+"')");
            int l=pst.executeUpdate();
            if(l>0)
            {
                JOptionPane.showMessageDialog(null,"ADDED TO STOCK");
            }
        }
         catch(Exception e)
        {
            System.out.println("Error"+e);
        }
}
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (!jTable3.getSelectionModel().isSelectionEmpty())
        {
        String[] buttons = { "REMOVE", "REMOVE AND RE-ADD", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Select :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(!(rc==1 ||rc==0))
            return;
        if(rc==1)
        {
            //add row to databse
            addRowToStock();
        }
        al.remove(jTable3.getSelectedRow()); 
        dm.removeRow(jTable3.getSelectedRow());
        loadRollWeight();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if(!jTable1.getSelectionModel().isSelectionEmpty())
        {
          
            String subc,col,desc,ret2,id;
            String wt;
            dm=(DefaultTableModel) jTable1.getModel();
            int selected=jTable1.getSelectedRow();
            id=jTable1.getValueAt(selected,0).toString();

            ret2=jTable1.getValueAt(selected,8).toString();

            prcol.setText(jTable1.getValueAt(selected,5).toString());
            prtyp.setText(jTable1.getValueAt(selected,3).toString());
            jLabel23.setText(jTable1.getValueAt(selected,4).toString());
            prwt.setText(jTable1.getValueAt(selected,7).toString()+"KG");
            if (ret2.toUpperCase().equals("YES"))
                jLabel24.setText("F");
            else
                jLabel24.setText("");
           ImageIcon iconLogo = new ImageIcon("lib/Barcodes/"+id+".png");
           jLabel21.setIcon(iconLogo);
           PrintFrameToPDF(jPanel2,id);
            
            try {
                letsPrint(id);
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void dispatchidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dispatchidKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        jButton6.doClick();
        if(evt.isControlDown() && evt.getKeyCode()==KeyEvent.VK_K)
        {
            jLabel29.setText("GKF");
            loadChallanId();
            loadK();
            resetDispatch();
        
        }
        else if (evt.isControlDown() && evt.getKeyCode()==KeyEvent.VK_P)
        {
            jLabel29.setText("GHEWOBA KNIT FAB PVT. LTD.");
            loadChallanId();
            loadP();
             resetDispatch();
        }
       
    }//GEN-LAST:event_dispatchidKeyPressed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        resetDispatch();
        int challan=Integer.parseInt(jTextField1.getText());
        loadDispatchDetails(challan);
        temp=challan;
        //Get details for dispatch
        al.clear();
        
        //Get Dispatch Items
        loadDispatchItems(challan);
    }//GEN-LAST:event_jButton11ActionPerformed
void loadDispatchDetails(int challan)
{
    
    Date date;
    String type;
        
        
        
            if(jLabel29.getText().equals("GKF"))
                type="dispatch2";
            else
                type="dispatch";
    rs=connect.dispatchDet(challan,type);
    String s,a1,a2,a3,a4;
        try {
            if(rs.next())
            {
                challanNo.setText(Integer.toString(challan));
                s=rs.getString("payee");
                
                
                a1=rs.getString("to_1");
                a2=rs.getString("to_2");
                a3=rs.getString("gstin");
                a4=rs.getString("hsn");
                
                delivery.setText(rs.getString("deliveryby"));
                tpcs.setText(rs.getString("totalrolls"));
                tpcs1.setText(rs.getString("bales"));
                twt.setText(rs.getString("totalwt"));
                tyard.setText(rs.getString("yard"));
                date=rs.getDate("date");
                accountof.setText(s);
                DefaultComboBoxModel dm=(DefaultComboBoxModel)jComboBox5.getModel();
                DefaultComboBoxModel dm2=(DefaultComboBoxModel)jComboBox7.getModel();
                if(dm.getIndexOf(s)!=-1)
                jComboBox5.setSelectedItem(s);
                to1.setText(a1);
                to2.setText(a2);
                gstin.setText(a3);
                d2.setText(a4);
                if(dm2.getIndexOf(a4)!=-1)
                jComboBox7.setSelectedItem(a4);
                challandate.setText(new SimpleDateFormat("dd/MM/yyyy").format(date));
                
               
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}
void loadDispatchItems(int challan)
{
     dm=(DefaultTableModel) jTable3.getModel();
        String type;
        if(jLabel29.getText().equals("GKF"))
                type="dispatch_details2";
            else
                type="dispatch_details";
        int id=0,rolls=0,ret=0;
        double w;
        String subc,col,desc,wt,cate,yard;
        rs = connect.dispatchItems(challan,type);
        try {
            while(rs.next())
            {
                id=rs.getInt("stockid");
                cate=rs.getString("yarn");
                al.add(cate);
                subc=rs.getString("quality");
                desc=rs.getString("description");
                col=rs.getString("color");
//                rolls=rs.getInt("rolls");
                wt=rs.getString("weight");
                 yard=rs.getString("yard");
                
//                ret=rs.getInt("returned");
                            
                
                Populate2(id,subc,col,desc,wt,yard);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed

        int challan=Integer.parseInt(challanNo.getText());
        String type;
            if(jLabel29.getText().equals("GKF"))
                type="dispatch2";
            else
                type="dispatch";
        rs=connect.checkBill(temp,type);
        try {
            if(rs.next()==false)
            {
                loadRollWeight();
                //System.out.println(al);
                long time;
                time=System.currentTimeMillis();
                SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
                String d=sdf.format(time);
                int rows=jTable3.getRowCount();
                addDispatchDetails(d);
                for(int i=0;i<rows;i++)
                {
                    String id=jTable3.getValueAt(i,0).toString();
                    try {
                        saveDispatchItem(i,d);
                        pst=conn.prepareStatement("delete  from stock where stockid='"+id+"' ");
                        int l=pst.executeUpdate();
                    } catch (SQLException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
            else
            {
                jButton15.doClick();
            }
            //Print
            jButton9.doClick();
            resetDispatch();
                /*try {
                   // print();
                } catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (PrinterException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
                resetDispatch();
                al.clear();*/
            
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton12ActionPerformed
    private void print() throws IOException, PrinterException
    {
        String d="";
        jComboBox5.setVisible(false);
        String test1= JOptionPane.showInputDialog("Number Of Prints :",2);
        //System.out.println(test1);
        if(test1==null || test1.equals(""))
        {
            
            jComboBox5.setVisible(true);
            return;
        }
        if(jLabel29.getText().equals("GKF"))
                d="k"+challanNo.getText();
            else
                d="p"+challanNo.getText();
            
        PrintFrameToPDF2(jPanel6,d);
        for(int i=1;i<=Integer.parseInt(test1);i++)
        {
            letsPrint2(d);
        }
        jComboBox5.setVisible(true);
    }
    private  void loadK()
    {
        o1.setVisible(false);
        o2.setVisible(false);
        o3.setVisible(false);
        o4.setVisible(false);
        o5.setVisible(false);
        o6.setVisible(false);
        o7.setVisible(false);
        o8.setVisible(false);
        o9.setVisible(false);
        o10.setVisible(false);
        gstin.setVisible(false);
//        hsn.setVisible(false);
        jLabel29.setText("GKF");
    }
    private  void loadP()
    {
        o1.setVisible(true);
        o2.setVisible(true);
        o3.setVisible(true);
        o4.setVisible(true);
        o5.setVisible(true);
        o6.setVisible(true);
        o7.setVisible(true);
        o8.setVisible(true);
        o9.setVisible(true);
        o10.setVisible(true);
        gstin.setVisible(true);
//        hsn.setVisible(true);
        jLabel29.setText("GHEWOBA KNIT FAB PVT. LTD.");
    }
    void addDispatchDetails(String d)
    {
        String t1=to1.getText().toUpperCase();
        String t2=to2.getText().toUpperCase();
        String gst=gstin.getText().toUpperCase();
        String hs=d2.getText().toUpperCase();
        String bl=tpcs1.getText().toUpperCase();
        int challan=Integer.parseInt(challanNo.getText());
        String del=delivery.getText().toUpperCase();
        String tp=tpcs.getText();
        String wt=twt.getText();
        String yard=tyard.getText();
        String account=accountof.getText().toUpperCase();
        account=jComboBox5.getSelectedItem().toString().toUpperCase();
        String type;
        
        
        
            if(jLabel29.getText().equals("GKF"))
                type="dispatch2";
            else
                type="dispatch";
            try {
                pst=conn.prepareStatement("insert into "+type+" (date,challan_no,to_1,to_2,payee,gstin,hsn,deliveryby,totalrolls,totalwt,yard,bales) values ('"+d+"','"+challan+"','"+t1+"','"+t2+"','"+account+"','"+gst+"','"+hs+"','"+del+"','"+tp+"','"+wt+"','"+yard+"','"+bl+"')");
                int i=pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }    
    }
    void saveDispatchItem(int i,String d) throws SQLException
    {
        String type;
        if(jLabel29.getText().equals("GKF"))
                type="dispatch_details2";
            else
                type="dispatch_details";
        String rowData[]={"","","","","",""};
        for (int j=0;j<6;j++)
        {
            rowData[j]=jTable3.getValueAt(i, j).toString();
            
        }
        int challan=Integer.parseInt(challanNo.getText());
        String yarn=al.get(i);
        try{
        pst=conn.prepareStatement("insert into "+type+" (date,stockid,dispatchid,yarn,quality,color,description,weight,yard)values ('"+d+"','"+Integer.parseInt(rowData[0])+"','"+challan+"','"+yarn+"','"+rowData[1]+"','"+rowData[2]+"','"+rowData[3]+"','"+rowData[4]+"','"+rowData[5]+"')");
        int j=pst.executeUpdate();
        }
        catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    void resetDispatch()
    {
        
        to1.setText("");
        to2.setText("");
        gstin.setText("");
        accountof.setText("");
        delivery.setText("CHIRAG TRANSPORT EXP.");
        tpcs.setText("");
        tpcs1.setText("");
        twt.setText("0");
        tyard.setText("0");
        loaddate();
        loadChallanId();
        dm=(DefaultTableModel) jTable3.getModel();
        dm.setRowCount(0);
        al.clear();
    }
    private void dispatchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dispatchKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_K)
        jLabel29.setText("GKB");
    }//GEN-LAST:event_dispatchKeyPressed

    private void jPanel6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel6KeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_K)
        jLabel29.setText("GKB");
        if (evt.getKeyCode()==KeyEvent.VK_P)
        jLabel29.setText("GHEWOBA KNIT FAB PVT. LTD.");
        jTextField1.setText("123");
    }//GEN-LAST:event_jPanel6KeyPressed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        resetDispatch();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        jButton11.doClick();
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        //check if 
        loadRollWeight();
        String t1=to1.getText();
        String t2=to2.getText();
        String gst=gstin.getText();
        String hs=d2.getText().toUpperCase();
        int challan=Integer.parseInt(challanNo.getText());
        String del=delivery.getText();
        String tp=tpcs.getText().toUpperCase();
        String bl=tpcs1.getText().toUpperCase();
        String wt=twt.getText();
        String yard=tyard.getText();
        String account=accountof.getText();
        account=jComboBox5.getSelectedItem().toString();
        String type;
        Date date1 = null;
        String date=challandate.getText();
        try {
             date1=new SimpleDateFormat("dd/MM/yyyy").parse(date);
            
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        date=(new SimpleDateFormat("yyyy/MM/dd").format(date1));
        
            if(jLabel29.getText().equals("GKF"))
                type="dispatch2";
            else
                type="dispatch"; 
            //check if challanNo is occupied or not
           /* try
            {
                
            }*/
        try {
                pst=conn.prepareStatement("update "+type+" set challan_no=? ,date=?,to_1=? ,to_2=?, payee=?,gstin=?, hsn=? ,deliveryby=?, totalrolls=?,totalwt=?,yard=?,bales=? where challan_no='"+temp+"' ");
                pst.setInt(1, challan);
                pst.setString(2, date);
                pst.setString(3, t1);
                pst.setString(4,t2);
                pst.setString(5,account);
                pst.setString(6,gst);
                pst.setString(7,hs);
                pst.setString(8,del);
                pst.setString(9,tp);
                pst.setString(10,wt);
                pst.setString(11, yard);
                pst.setString(12, bl);
                int l=pst.executeUpdate();
                 if(l>0)
            {
               
                JOptionPane.showMessageDialog(null,"Updated Stock");
            }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
       
            removeUpdate(temp); 
            int rows=jTable3.getRowCount();
            long time;
            time=System.currentTimeMillis();
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
            String d=sdf.format(time);
            for(int i=0;i<rows;i++)
        {
            String id=jTable3.getValueAt(i,0).toString();
            try {   
                saveDispatchItem(i,date);
                pst=conn.prepareStatement("delete  from stock where stockid='"+id+"' ");
            int l=pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
            
            
        
        
        
            
    }//GEN-LAST:event_jButton15ActionPerformed

    private void yarn_appendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yarn_appendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yarn_appendActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Do You Want to Delete :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1)
        {
        
        String yarn=jComboBox2.getSelectedItem().toString().toUpperCase(),qual;
            try 
            {
            pst=conn.prepareStatement("delete  from yarn where yarnname='"+yarn+"' ");
            int l=pst.executeUpdate();
            rs = connect.getQuality(yarn);
            while (rs.next())
            {
                qual=rs.getString("qual");
                pst=conn.prepareStatement("delete  from color where quality='"+qual+"' ");
                l=pst.executeUpdate();
            }
            pst=conn.prepareStatement("delete  from quality where yarn='"+yarn+"' ");
             l=pst.executeUpdate();
            
            if(l>0)
            {
                
                JOptionPane.showMessageDialog(null,"Removed!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            loadYarnCombo();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(jComboBox2.getSelectedItem()!=null)
        {
            yarn_append.setText(jComboBox2.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if(jComboBox2.getSelectedItem()!=null)
        {
            yarn_append.setText(jComboBox2.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
         if(jComboBox3.getSelectedItem()!=null)
        {
            qual_append.setText(jComboBox3.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Do You Want to Update :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1)
        {
            String yarn=yarn_append.getText().toUpperCase(); 
            String yarn2=jComboBox2.getSelectedItem().toString();
            try {
                pst=conn.prepareStatement("update  yarn set yarnname='"+yarn+"' where yarnname='"+yarn2+"'");
                int l=pst.executeUpdate();
                pst=conn.prepareStatement("update  quality set yarn='"+yarn+"' where yarn='"+yarn2+"'");
                int l2=pst.executeUpdate();
                pst=conn.prepareStatement("update  dispatch_details set yarn='"+yarn+"' where yarn='"+yarn2+"'");
                int l3=pst.executeUpdate();
                pst=conn.prepareStatement("update  dispatch_details2 set yarn='"+yarn+"' where yarn='"+yarn2+"'");
                int l4=pst.executeUpdate();
                pst=conn.prepareStatement("update  stock set category='"+yarn+"' where category='"+yarn2+"'");
                int l5=pst.executeUpdate();
                if(l>0 && l2>0 && l3>0 && l4>0 && l5>0)
                {
                    JOptionPane.showMessageDialog(null,"UPDATED SUCCESSFULLY");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {    
                loadYarnCombo();
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Do You Want to Update :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1)
        {
        String qual=qual_append.getText().toUpperCase(); 
        String qual2=jComboBox3.getSelectedItem().toString();
        String yarn=jComboBox1.getSelectedItem().toString();
        try {
            pst=conn.prepareStatement("update  quality set quality_name='"+qual+"' where quality_name='"+qual2+"' and yarn='"+yarn+"'");
            int l=pst.executeUpdate();
            pst=conn.prepareStatement("update  color set quality='"+qual+"' where quality='"+qual2+"'");
            int l2=pst.executeUpdate();
            pst=conn.prepareStatement("update  stock set subcateg='"+qual+"' where subcateg='"+qual2+"'");
            int l3=pst.executeUpdate();
            pst=conn.prepareStatement("update  dispatch_details set quality='"+qual+"' where quality='"+qual2+"'");
            int l4=pst.executeUpdate();
            pst=conn.prepareStatement("update  dispatch_details2 set quality='"+qual+"' where quality='"+qual2+"'");
            int l5=pst.executeUpdate();
            if(l>0 && l2>0 && l3>0 && l4>0 && l5>0)
                {
                    JOptionPane.showMessageDialog(null,"UPDATED SUCCESSFULLY");
                }
            loadYarnCombo();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedItem()!=null)
        {
        String y = jComboBox1.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        jComboBox3.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox3.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox3.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(jComboBox1.getSelectedItem()!=null)
        {
        String y = jComboBox1.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadquality(y);
        jComboBox3.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox3.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox3.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        if(jComboBox3.getSelectedItem()!=null)
        {
            qual_append.setText(jComboBox3.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
            String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Do You Want to Delete :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1)
        {
            String qual=jComboBox3.getSelectedItem().toString();
                try 
                {
                pst=conn.prepareStatement("delete  from quality where quality_name='"+qual+"' ");
                int l=pst.executeUpdate();
                pst=conn.prepareStatement("delete  from color where quality='"+qual+"' ");
                l=pst.executeUpdate();


                if(l>0)
                {
                    loadYarnCombo();
                    JOptionPane.showMessageDialog(null,"Removed!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jButton18ActionPerformed

    private void addcolor_qualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addcolor_qualItemStateChanged
        if(addcolor_qual.getSelectedItem()!=null)
       {
        String y = addcolor_qual.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        rs=connect.loadcolor(y);
        jComboBox4.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox4.setModel(new DefaultComboBoxModel(list.toArray()));
        jComboBox4.setSelectedIndex(0);
       }
    }//GEN-LAST:event_addcolor_qualItemStateChanged

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
         if(jComboBox4.getSelectedItem()!=null)
        {
            color_append.setText(jComboBox4.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
         if(jComboBox4.getSelectedItem()!=null)
        {
            color_append.setText(jComboBox4.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
            String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Do You Want to Delete :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1)
        {
            String color=jComboBox4.getSelectedItem().toString();
            String qual=addcolor_qual.getSelectedItem().toString();
            try 
            {

            pst=conn.prepareStatement("delete  from color where color='"+color+"' and quality='"+qual+"' ");
            int l=pst.executeUpdate();


            if(l>0)
            {
                loadYarnCombo();
                JOptionPane.showMessageDialog(null,"Removed!");
            }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Warning", "Do You Want to Update :",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1)
        {
        String color=color_append.getText().toUpperCase(); 
        String color1=jComboBox4.getSelectedItem().toString();
        String qual=addcolor_qual.getSelectedItem().toString();
        try {
            pst=conn.prepareStatement("update  color set color='"+color+"' where color='"+color1+"' and quality='"+qual+"'");
            int l=pst.executeUpdate();
            pst=conn.prepareStatement("update  stock set color='"+color+"' where color='"+color1+"' and subcateg='"+qual+"'");
            int l1=pst.executeUpdate();
            pst=conn.prepareStatement("update  dispatch_details set color='"+color+"' where color='"+color1+"' and quality='"+qual+"'");
            int l2=pst.executeUpdate();
            pst=conn.prepareStatement("update  dispatch_details2 set color='"+color+"' where color='"+color1+"' and quality='"+qual+"'");
            int l3=pst.executeUpdate();
            if(l>0 && l2>0 && l3>0 && l1>0)
                {
                    JOptionPane.showMessageDialog(null,"UPDATED SUCCESSFULLY");
                }
            loadYarnCombo();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void addpartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addpartyActionPerformed
        
        String name=AP1.getText().toUpperCase();
        if(name.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Unsuccessful Please enter name");
            return;
        }
        String gst=AP2.getText().toUpperCase();
        String ad1=AP3.getText().toUpperCase();
        String ad2="";
        String a2d1=AP5.getText().toUpperCase();
        String a2d2=AP6.getText().toUpperCase();
        
        try {
            pst=conn.prepareStatement("insert into  partydetails (pName,pGst,pAdd1,pAdd2,p2Add1,p2Add2) values ('"+name+"','"+gst+"','"+ad1+"','"+ad2+"','"+a2d1+"','"+a2d2+"')");
            int l=pst.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        AP1.setText("");
        AP2.setText("");
        AP3.setText("");
        
        AP5.setText("");
        AP6.setText("");
        
        loadPartyCombo();
    }//GEN-LAST:event_addpartyActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        if(jComboBox5.getSelectedItem()!=null)
        {
            String pname=jComboBox5.getSelectedItem().toString();
            
            accountof.setText(pname);
            try
            {
                rs=connect.getPartyDetails(pname);
                while(rs.next())
                {
                    gstin.setText(rs.getString("pGst"));
                    d1.setText(rs.getString("pAdd1"));
                    //d2.setText(rs.getString("pAdd2"));
                    to1.setText(rs.getString("p2Add1"));
                    to2.setText(rs.getString("p2Add2"));
                    
                    
                }
            }
            catch(Exception e)
            {
                System.out.println("LoadParty DEt"+e);
            }
            
        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox5ItemStateChanged
        if(jComboBox5.getSelectedItem()!=null)
        {
            String pname=jComboBox5.getSelectedItem().toString();
            accountof.setText(pname);
            try
            {
                rs=connect.getPartyDetails(pname);
                while(rs.next())
                {
                    gstin.setText(rs.getString("pGst"));
                    d1.setText(rs.getString("pAdd1"));
                    //d2.setText(rs.getString("pAdd2"));
                    to1.setText(rs.getString("p2Add1"));
                    to2.setText(rs.getString("p2Add2"));
                    
                }
            }
            catch(Exception e)
            {
                System.out.println("LoadParty DEt"+e);
            }
            
        }
    }//GEN-LAST:event_jComboBox5ItemStateChanged
void displayBills(String type,String type2) throws SQLException
{
    SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
    String d1=formater.format(date3.getDate());
    String d2=formater.format(date4.getDate());
        if(d1.equals("") || d2.equals(""))
            return;
    
    dm=(DefaultTableModel) jTable4.getModel();
    dm.setRowCount(0);
    rs=connect.getInvoiceList(type,d1,d2);
    String date,ch,party,del,rolls,weight,delby,qual="",yard;
    while(rs.next())
    {
        date=rs.getString("dateList");
        ch=rs.getString("challan_no");
        party=rs.getString("payee");
        del=rs.getString("to_1");
        rolls=rs.getString("totalrolls");
        weight=rs.getString("totalwt");
        yard=rs.getString("yard");
        delby=rs.getString("deliveryby");
        
        Populate3(date,ch,party,del,qual,rolls,weight,yard,delby);
    }
    int rows=jTable4.getRowCount();
    for(int i=0;i<rows;i++)
    {
        ch=jTable4.getValueAt(i,1).toString();
        rs=connect.getDistinctQual(type2,ch);
        if(rs.next())
            qual=rs.getString("qual");
        dm.setValueAt(qual,i,4);
    }
}
    private void jButton14KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton14KeyPressed
        try {
            if (evt.getKeyCode()==KeyEvent.VK_K)
            {
                displayBills("dispatch2","dispatch_details2");
                jTextField2.setText("K");
            }
            else if (evt.getKeyCode()==KeyEvent.VK_P)
            {
                displayBills("dispatch","dispatch_details");
                jTextField2.setText("P");
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton14KeyPressed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        try {
            displayBills("dispatch","dispatch_details");
            jTextField2.setText("P");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) 
        {
            evt.consume();
            if(!jTable4.getSelectionModel().isSelectionEmpty())
            {
                 String challan=jTable4.getValueAt(jTable4.getSelectedRow(),1).toString();
                 temp=Integer.parseInt(challan);
                 if(jTextField2.getText().equals("P"))
                 {
                    jLabel29.setText("GHEWOBA KNIT FAB PVT. LTD.");
                    loadP();
                    jTextField1.setText(challan);
                    jButton11.doClick();
                    mainpanel.removeAll();
                    mainpanel.add(dispatch);
                    mainpanel.repaint();
                    mainpanel.revalidate();
                    resetColor(addstockpanel);
                    setColor(dispatchpanel);
                    resetColor(inventorypanel);
                    resetColor(adminlabel);
                    
                 }
                 else if(jTextField2.getText().equals("K"))
                 {
                     jLabel29.setText("GKF");
                     loadK();
                     jTextField1.setText(challan);
                     jButton11.doClick();
                     mainpanel.removeAll();
                    mainpanel.add(dispatch);
                    mainpanel.repaint();
                    mainpanel.revalidate();
                    resetColor(addstockpanel);
                    setColor(dispatchpanel);
                    resetColor(inventorypanel);
                    resetColor(adminlabel);
                    
                 }
            }
        }
    }//GEN-LAST:event_jTable4MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void deliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deliveryActionPerformed

    private void tyardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tyardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tyardActionPerformed

    private void tpcsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpcsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpcsActionPerformed

    private void AP6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AP6KeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        addparty.doClick();
    }//GEN-LAST:event_AP6KeyPressed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
         mainpanel.removeAll();
        mainpanel.add(invoicelist);
        mainpanel.repaint();
        mainpanel.revalidate();
        //jButton14.doClick();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        dm=(DefaultTableModel) jTable5.getModel();
        dm.setRowCount(0);
        mainpanel.removeAll();
        mainpanel.add(jPanel11);
        mainpanel.repaint();
        mainpanel.revalidate();
        /*
        try {
            //Get all yarns
            rs=connect.stockSummary();
            String count,yarn,qual,color,description;
            int r=0;
            while(rs.next())
            {
                yarn=rs.getString("category");
                qual=rs.getString("subcateg");
                description=rs.getString("description");
                color=rs.getString("color");
                count=rs.getString("count(id)");
                Populate4(yarn,qual,description,color,count);
                
                
                    //r=r+Integer.parseInt(count);
                    
                
            }
            System.out.println("Rows"+r);
            /*ArrayList<String> ylist = new ArrayList<>();
            rs=connect.yarnList();
            try {
            while(rs.next())
            {
            ylist.add(rs.getString("yarnname"));
            
            }
            //select each yarn and load quality
            int s1=ylist.size();
            for(int i=0;i<s1;i++)
            {
            loadQual(ylist.get(i));
            }
            //each quality check if design exists
            //
            } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }*/
        /*} catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        jButton30.doClick();
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jComboBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox6ItemStateChanged
        if(jComboBox6.getSelectedItem()!=null)
        {
                String pname=jComboBox6.getSelectedItem().toString();
            try {
                displayCustomBill("dispatch",pname,"dispatch_details");
                jTextField2.setText("P");
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_jComboBox6ItemStateChanged
void displayCustomBill(String type,String pname,String type2) throws SQLException
{
    dm=(DefaultTableModel) jTable4.getModel();           
    dm.setRowCount(0);
    SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
    String d1=formater.format(date3.getDate());
    String d2=formater.format(date4.getDate());
        if(d1.equals("") || d2.equals(""))
            return;
        rs=connect.getInvoiceListCustom(type,pname,d1,d2);
        String date,ch,party,del,rolls,weight,delby,qual="",yd;
        while(rs.next())
        {
            date=rs.getString("date");
            ch=rs.getString("challan_no");
            party=rs.getString("payee");
            del=rs.getString("to_1");
            rolls=rs.getString("totalrolls");
            weight=rs.getString("totalwt");
            yd=rs.getString("yard");
            delby=rs.getString("deliveryby");
            
            Populate3(date,ch,party,del,qual,rolls,weight,yd,delby);
        }
        int rows=jTable4.getRowCount();
        for(int i=0;i<rows;i++)
        {
            ch=jTable4.getValueAt(i,1).toString();
            rs=connect.getDistinctQual(type2,ch);
            if(rs.next())
                qual=rs.getString("qual");
            dm.setValueAt(qual,i,4);
        }
}
    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        if(jComboBox6.getSelectedItem()!=null)
        {
                String pname=jComboBox6.getSelectedItem().toString();
            try {
                displayCustomBill("dispatch",pname,"dispatch_details");
                jTextField2.setText("P");
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox6KeyPressed
        try {
            String pname=jComboBox6.getSelectedItem().toString();
            if (evt.isControlDown() && evt.getKeyCode()==KeyEvent.VK_K)
            {
                displayCustomBill("dispatch2",pname,"dispatch_details2");
                jTextField2.setText("K");
            }
            else if (evt.isControlDown() && evt.getKeyCode()==KeyEvent.VK_P)
            {
                displayCustomBill("dispatch",pname,"dispatch_details");
                jTextField2.setText("P");
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox6KeyPressed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        stats("90");
// TODO add your handling code here:
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        stats("30");
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        stats("180");
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        stats("365");
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
         mainpanel.removeAll();
        mainpanel.add(dispatchstats);
        mainpanel.repaint();
        mainpanel.revalidate();
                        
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        dm=(DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
        int stid=0,rolls=0,ret=0;
        String subc="",col="",desc="",cate="",wt,date;
        try
        {   
           rs=connect.Inventory3();
            while (rs.next())
            {
                stid=rs.getInt("stockid");
                date=rs.getString("date");
                cate=rs.getString("category");
                subc=rs.getString("subcateg");
                desc=rs.getString("description");
                col=rs.getString("color");
                rolls=rs.getInt("rolls");
                wt=rs.getString("kg");
                ret=rs.getInt("returned");
                String c="",t="";
                
                if(ret==1)
                    t="Yes";
                else
                    t="No";
                Populate(stid,date,cate,subc,desc,col,rolls,wt,t);
                dm=(DefaultTableModel) jTable1.getModel();
                int row=jTable1.getRowCount();
                int r=0;
                double w=0;
                for (int m=0;m<row;m++)
                {
                    r=r+Integer.parseInt(jTable1.getValueAt(m,6).toString());
                    w=w+Double.parseDouble(jTable1.getValueAt(m,7).toString());
                }
                total_roll.setText(Integer.toString(r));
                total_wt.setText(Double.toString(w));
            }
        }
        catch(Exception ex){
                        System.out.println("Here is not the error"+ex);
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void dColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dColActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dColActionPerformed

    private void dYarnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dYarnItemStateChanged
         if(dYarn.getSelectedItem()!=null)
        {
        String y = dYarn.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        list.add("ALL");
        rs=connect.loadquality(y);
        dQual.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        dQual.setModel(new DefaultComboBoxModel(list.toArray()));
        dQual.setSelectedIndex(0);
        }
    }//GEN-LAST:event_dYarnItemStateChanged

    private void dQualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dQualItemStateChanged
        if(dQual.getSelectedItem()!=null)
       {
        String y = dQual.getSelectedItem().toString();
        
        ArrayList<String> list = new ArrayList<>();
        list.add("ALL");
        rs=connect.loadcolor(y);
        dCol.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        dCol.setModel(new DefaultComboBoxModel(list.toArray()));
        dCol.setSelectedIndex(0);
       }
       
    }//GEN-LAST:event_dQualItemStateChanged

    private void tpcs1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpcs1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpcs1ActionPerformed

    private void sYarnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sYarnKeyPressed
        
    }//GEN-LAST:event_sYarnKeyPressed

    private void sQualItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sQualItemStateChanged
        if(sQual.getSelectedItem()!=null)
       {
        String y = sQual.getSelectedItem().toString();
        
        ArrayList<String> list = new ArrayList<>();
        list.add("ALL");
        rs=connect.loadcolor(y);
        sCol.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("color"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        sCol.setModel(new DefaultComboBoxModel(list.toArray()));
        sCol.setSelectedIndex(0);
       // jButton30.doClick();
       }
    }//GEN-LAST:event_sQualItemStateChanged

    private void sYarnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sYarnItemStateChanged
         if(sYarn.getSelectedItem()!=null)
        {
        String y = sYarn.getSelectedItem().toString();
        System.out.println(y);
        ArrayList<String> list = new ArrayList<>();
        list.add("ALL");
        rs=connect.loadquality(y);
        sQual.removeAllItems();
        try
        {
            while(rs.next())
            {
                list.add(rs.getString("quality_name"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        sQual.setModel(new DefaultComboBoxModel(list.toArray()));
        sQual.setSelectedIndex(0);
        jButton30.doClick();
        }
    }//GEN-LAST:event_sYarnItemStateChanged

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        if(designInc.isSelected())
            customStock();
        else
            customStock2();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jTable3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable3KeyPressed
       if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        loadRollWeight();
    }//GEN-LAST:event_jTable3KeyPressed

    private void jTable3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable3KeyTyped
        loadRollWeight();
    }//GEN-LAST:event_jTable3KeyTyped

    private void to1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to1ActionPerformed

    private void stockSummaryPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockSummaryPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockSummaryPrintActionPerformed

    private void sColItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sColItemStateChanged
       // jButton30.doClick();
    }//GEN-LAST:event_sColItemStateChanged

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
    String[] buttons = { "NO", "YES", };

        int rc = JOptionPane.showOptionDialog(null, "Do You Want to DELETE :", "WARNING",
        JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);
        if(rc==1 && jComboBox5.getSelectedItem()!=null)
        {
            String party=jComboBox5.getSelectedItem().toString();
            try 
                {
                pst=conn.prepareStatement("delete  from partydetails where pName='"+party+"' LIMIT 1 ");
                int l=pst.executeUpdate();
                


                if(l>0)
                {
                    loadPartyCombo();
                    JOptionPane.showMessageDialog(null,"Removed!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        if(!(jTextField1.getText().equals("") || jTextField1.getText()==null || jTextField1.getText().equals("1")) )
        {
            String s=jTextField1.getText();
            int a=Integer.parseInt(s);
            a--;
            jTextField1.setText(Integer.toString(a));
            jButton11.doClick();
        }
    }//GEN-LAST:event_jButton33ActionPerformed

    private void to2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to2ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
         if(!(jTextField1.getText().equals("") || jTextField1.getText()==null) )
        {
            String s=jTextField1.getText();
            int a=Integer.parseInt(s);
            a++;
            jTextField1.setText(Integer.toString(a));
            jButton11.doClick();
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void designIncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designIncActionPerformed
         if(designInc.isSelected())
            customStock();
        else
            customStock2();
    }//GEN-LAST:event_designIncActionPerformed

    private void iRollNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iRollNoKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER && !iRollNo.getText().equals(""))
        {
            dm=(DefaultTableModel) jTable4.getModel();
            dm.setRowCount(0);
            int dispatch=-1,type=-1;
            int roll=Integer.parseInt(iRollNo.getText());
            rs=connect.getBillByID("dispatch_details",roll);
            try
            {
                if(rs.next())
                {
                   dispatch=rs.getInt("dispatchid");
                   type=0;
                }
                else
                {
                    rs=connect.getBillByID("dispatch_details2",roll);
                    if(rs.next())
                    {
                        dispatch=rs.getInt("dispatchid");
                        type=1;
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"ROLL NOT DISPATCHED YET");
                        return;
                    }
                }
                String type2="";
                if(dispatch!=-1)
                {
                    if(type==0)
                    {
                        rs=connect.getInvoiceDetails("dispatch",dispatch);
                        jTextField2.setText("P");
                        type2="dispatch_details";
                    }
                    else
                    {
                        rs=connect.getInvoiceDetails("dispatch2",dispatch);
                        jTextField2.setText("K");
                        type2="dispatch_details2";
                    }
                    
                    String date,ch,party,del,rolls,weight,delby,qual="",yard;
                    while(rs.next())
                    {
                        date=rs.getString("date");
                        ch=rs.getString("challan_no");
                        party=rs.getString("payee");
                        del=rs.getString("to_1");
                        rolls=rs.getString("totalrolls");
                        weight=rs.getString("totalwt");
                        yard=rs.getString("yard");
                        delby=rs.getString("deliveryby");
                        
                        Populate3(date,ch,party,del,qual,rolls,weight,yard,delby);
                    }
                    int rows=jTable4.getRowCount();
                    for(int i=0;i<rows;i++)
                    {
                        ch=jTable4.getValueAt(i,1).toString();
                        rs=connect.getDistinctQual(type2,ch);
                        if(rs.next())
                            qual=rs.getString("qual");
                        dm.setValueAt(qual,i,4);
                    }
                    
                }
                iRollNo.setText("");
            }
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_iRollNoKeyPressed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        String test1= JOptionPane.showInputDialog("Name of Transport :",null);
        //System.out.println(test1);
        if(test1==null || test1.equals(""))
        {
            return;
        }
        try {
            pst=conn.prepareStatement("insert into  transportdet (name) values ('"+test1+"')");
            int l=pst.executeUpdate();
            loadTransportCombo();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        if(jComboBox7.getSelectedItem()!=null)
        {
            String pname=jComboBox7.getSelectedItem().toString();
            
            d2.setText(pname);
        }
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox7ItemStateChanged
        if(jComboBox7.getSelectedItem()!=null)
        {
            String pname=jComboBox7.getSelectedItem().toString();
            
            d2.setText(pname);
        }
    }//GEN-LAST:event_jComboBox7ItemStateChanged

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        if(pID.getText().equals(""))
        {
            String party=jComboBox5.getSelectedItem().toString();
            rs=connect.getPartyID(party);
            try {
                if(rs.next())
                {
                    pID.setText(Integer.toString(rs.getInt("id")));
                    AP2.setText(rs.getString("pGst"));
                    AP3.setText(rs.getString("pAdd1"));
                    AP1.setText(party);
                    AP5.setText(rs.getString("p2Add1"));
                    AP6.setText(rs.getString("p2Add2"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            int id=Integer.parseInt(pID.getText());
            String name=AP1.getText().toUpperCase();
            String gst=AP2.getText().toUpperCase();
            String ad1=AP3.getText().toUpperCase();
            String ad2="";
            String a2d1=AP5.getText().toUpperCase();
            String a2d2=AP6.getText().toUpperCase();
        
        try {
            pst=conn.prepareStatement("update partydetails set pName='"+name+"',pGst='"+gst+"',pAdd1='"+ad1+"',p2Add1='"+a2d1+"',p2Add2='"+a2d2+"' where id='"+id+"'");
            int l=pst.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearParty();
        loadPartyCombo();
        }
        
            
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        clearParty();
    }//GEN-LAST:event_jButton37ActionPerformed

    private void yFactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yFactKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER && !yFact.getText().equals("") && jTable3.getSelectionModel()!=null)
        {
            double f=Double.parseDouble(yFact.getText());
            dm=(DefaultTableModel) jTable3.getModel();
            int row=dm.getRowCount();
            ListSelectionModel model=jTable3.getSelectionModel();
            double a,b;
            for(int i=0;i<row;i++)
            {
                if(model.isSelectedIndex(i)==false)
                    continue;
                a=Double.parseDouble(jTable3.getValueAt(i,4).toString());
                b=a*f;
                b=Math.round(b*10.0)/10.0;
                dm.setValueAt(Double.toString(b),i,5);
                
            }
            loadRollWeight();
            yFact.setText("");
        }
    }//GEN-LAST:event_yFactKeyPressed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        
            
            dm=(DefaultTableModel) jTable3.getModel();
            ListSelectionModel model=jTable3.getSelectionModel();
            int row=dm.getRowCount();
            for(int i=0;i<row;i++)
            {
                if(model.isSelectedIndex(i)==false)
                    continue;
                dm.setValueAt("",i,5);
            }
            loadRollWeight();
        
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        dm=(DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String d1=formater.format(date1.getDate());
        String d2=formater.format(date2.getDate());
        if(d1.equals("") || d2.equals(""))
            return;
        rs=connect.getStockByDate(d1,d2);
        int stid=0,rolls=0,ret=0;
        int r=0;
        String subc="",col="",desc="",cate="",wt,date="";
        double w=0;
        try {
            while(rs.next())
            {
                date=rs.getString("date");
                stid=rs.getInt("stockid");
                cate=rs.getString("category");
                subc=rs.getString("subcateg");
                desc=rs.getString("description");
                col=rs.getString("color");
                rolls=rs.getInt("rolls");
                wt=rs.getString("kg");
                ret=rs.getInt("returned");
                String c="",t="";
                
                if(ret==1)
                    t="Yes";
                else
                    t="No";
                Populate(stid,date,cate,subc,desc,col,rolls,wt,t);
                dm=(DefaultTableModel) jTable1.getModel();
                int row=jTable1.getRowCount();
                r=0;
                w=0;
                for (int m=0;m<row;m++)
                {
                    r=r+Integer.parseInt(jTable1.getValueAt(m,6).toString());
                    w=w+Double.parseDouble(jTable1.getValueAt(m,7).toString());
                }
                
            }
                w=Math.round(w*1000.0)/1000.0;
                total_roll.setText(Integer.toString(r));
                total_wt.setText(Double.toString(w));
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        
        String oldName=jComboBox7.getSelectedItem().toString();
        String test1= JOptionPane.showInputDialog("Change "+oldName+" to :",null);
        //System.out.println(test1);
        if(test1==null || test1.equals(""))
        {
            return;
        }
        try {
            pst=conn.prepareStatement("update   transportdet set name='"+test1+"' where name='"+oldName+"'");
            int l=pst.executeUpdate();
            loadTransportCombo();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton40ActionPerformed

    private void date3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date3ActionPerformed
        if(jButton14.hasFocus())
            jButton14.doClick();
        else if(jComboBox6.hasFocus())
            jComboBox6.setSelectedItem(jComboBox6.getSelectedItem());
            
    }//GEN-LAST:event_date3ActionPerformed

    private void date4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_date4ActionPerformed
        if(jButton14.hasFocus())
            jButton14.doClick();
        else if(jComboBox6.hasFocus())
            jComboBox6.setSelectedItem(jComboBox6.getSelectedItem());
    }//GEN-LAST:event_date4ActionPerformed
    public void clearParty()
    {
        pID.setText("");
        AP1.setText("");
        AP2.setText("");
        AP3.setText("");
        AP5.setText("");
        AP6.setText("");
        
    }
    void customStock()
    {
        dm=(DefaultTableModel) jTable5.getModel();
        dm.setRowCount(0);
        long s=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
        String d=sdf.format(s);
        String iy,iq,ic;
        if(sYarn.getSelectedItem().toString().equals("ALL"))
            rs=connect.stockSummary();
        else if(sQual.getSelectedItem().toString().equals("ALL"))
        {
            iy=sYarn.getSelectedItem().toString();
            rs=connect.stockSummary1(iy);
        }
        else if(sCol.getSelectedItem().toString().equals("ALL"))
        {
            iy=sYarn.getSelectedItem().toString();
             iq=sQual.getSelectedItem().toString();
            rs=connect.stockSummary2(iy,iq);
        }
        else
        {
            iy=sYarn.getSelectedItem().toString();
            iq=sQual.getSelectedItem().toString();
            ic=sCol.getSelectedItem().toString();
            rs=connect.stockSummary3(iy,iq,ic);
        }
       String yarn,qual,description,color,count;
        try {
            while(rs.next())
            {
                yarn=rs.getString("category");
                qual=rs.getString("subcateg");
                description=rs.getString("description");
                color=rs.getString("color");
                count=rs.getString("count(id)");
                Populate4(yarn,qual,description,color,count);
            }} catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void customStock2()
    {
        dm=(DefaultTableModel) jTable5.getModel();
        dm.setRowCount(0);
        long s=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
        String d=sdf.format(s);
        String iy,iq,ic;
        if(sYarn.getSelectedItem().toString().equals("ALL"))
            rs=connect.stockSummaryD();
        else if(sQual.getSelectedItem().toString().equals("ALL"))
        {
            iy=sYarn.getSelectedItem().toString();
            rs=connect.stockSummary1D(iy);
        }
        else if(sCol.getSelectedItem().toString().equals("ALL"))
        {
            iy=sYarn.getSelectedItem().toString();
             iq=sQual.getSelectedItem().toString();
            rs=connect.stockSummary2D(iy,iq);
        }
        else
        {
            iy=sYarn.getSelectedItem().toString();
            iq=sQual.getSelectedItem().toString();
            ic=sCol.getSelectedItem().toString();
            rs=connect.stockSummary3D(iy,iq,ic);
        }
       String yarn,qual,color,count;
        try {
            while(rs.next())
            {
                yarn=rs.getString("category");
                qual=rs.getString("subcateg");
                //description=rs.getString("description");
                color=rs.getString("color");
                count=rs.getString("count(id)");
                Populate4(yarn,qual,"",color,count);
            }} catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void stats(String t)
    {
        dm=(DefaultTableModel) jTable6.getModel();
        dm.setRowCount(0);
        long s=System.currentTimeMillis();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
        String d=sdf.format(s);
        String iy,iq,ic;
        if(dYarn.getSelectedItem().toString().equals("ALL"))
            rs=connect.stockStats1(t,d);
        else if(dQual.getSelectedItem().toString().equals("ALL"))
        {
            iy=dYarn.getSelectedItem().toString();
            rs=connect.stockStats2(t,d,iy);
        }
        else if(dCol.getSelectedItem().toString().equals("ALL"))
        {
            iy=dYarn.getSelectedItem().toString();
             iq=dQual.getSelectedItem().toString();
            rs=connect.stockStats3(t,d,iy,iq);
        }
        else
        {
            iy=dYarn.getSelectedItem().toString();
            iq=dQual.getSelectedItem().toString();
            ic=dCol.getSelectedItem().toString();
            rs=connect.stockStats4(t,d,iy,iq,ic);
        }
       String yarn,qual,description,color,count;
        try {
            while(rs.next())
            {
                yarn=rs.getString("yarn");
                qual=rs.getString("quality");
                description=rs.getString("description");
                color=rs.getString("color");
                count=rs.getString("count(id)");
                Populate5(yarn,qual,description,color,count);
            }} catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /*void loadQual(String yarn)
    {
       //load qual
        String qual,color;
        ArrayList<String> design= new ArrayList<>();
        //ArrayList<String> colours=new ArrayList<>();
        rs=connect.qualList(yarn);
        try {
            while(rs.next())
            {
                qual=rs.getString("quality_name");
                //check if design exists
                rs2=connect.getDesign(qual);
                while(rs2.next())
                {
                    design.add(rs2.getString("description"));
                }
                if(design.isEmpty()==true)
                {
                    //load Colours and get count
                    rs3=connect.getColours("qual");
                    while(rs3.next())
                    {
                        color=rs3.getString("color");
                        rs4=connect.getCount(qual, color);
                        String count =rs4.getString("count");
                        
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/
    void removeUpdate(int did)
    {
      String type;
        if(jLabel29.getText().equals("GKF"))
                type="dispatch_details2";
            else
                type="dispatch_details";
      try {
            pst=conn.prepareStatement("delete  from "+type+" where  dispatchid='"+did+"' ");
            int l=pst.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    void setColor(JPanel panel)
    {
        panel.setBackground(new Color(51,51,255));
    }
    void resetColor(JPanel panel)
    {
        panel.setBackground(new Color(0,102,255));
    }
    public  void loadQualityCombo(ComboBox a,ComboBox b)
    {
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Home().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JTextField AP1;
    private javax.swing.JTextField AP2;
    private javax.swing.JTextField AP3;
    private javax.swing.JTextField AP5;
    private javax.swing.JTextField AP6;
    private javax.swing.JPanel AddStock;
    private javax.swing.JTextField accountof;
    private javax.swing.JComboBox<String> addcolor_qual;
    private javax.swing.JComboBox<String> addcolor_yarn;
    private javax.swing.JButton addparty;
    private javax.swing.JButton addqual;
    private javax.swing.JPanel addstockpanel;
    private javax.swing.JPanel adminlabel;
    private javax.swing.JPanel adminpanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> categ;
    private javax.swing.JTextField challanNo;
    private javax.swing.JTextField challandate;
    private javax.swing.JComboBox<String> color1;
    private javax.swing.JTextField color_append;
    private javax.swing.JComboBox<String> colourinv;
    private javax.swing.JPanel cotton;
    private javax.swing.JTextField customID;
    private javax.swing.JTextField d1;
    private javax.swing.JTextField d2;
    private javax.swing.JComboBox<String> dCol;
    private javax.swing.JComboBox<String> dQual;
    private javax.swing.JComboBox<String> dYarn;
    private javax.swing.JTextField date;
    private org.jdesktop.swingx.JXDatePicker date1;
    private org.jdesktop.swingx.JXDatePicker date2;
    private org.jdesktop.swingx.JXDatePicker date3;
    private org.jdesktop.swingx.JXDatePicker date4;
    private javax.swing.JTextField delivery;
    private javax.swing.JCheckBox designInc;
    private javax.swing.JTextField design_inv;
    private javax.swing.JPanel dispatch;
    private javax.swing.JTextField dispatchid;
    private javax.swing.JPanel dispatchpanel;
    private javax.swing.JPanel dispatchstats;
    private javax.swing.JTextField gstin;
    private javax.swing.JTextField iRollNo;
    private javax.swing.JPanel inventorypanel;
    private javax.swing.JPanel invoicelist;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JTextField newfield;
    private javax.swing.JTextField newqual;
    private javax.swing.JLabel o1;
    private javax.swing.JLabel o10;
    private javax.swing.JLabel o2;
    private javax.swing.JLabel o3;
    private javax.swing.JLabel o4;
    private javax.swing.JLabel o5;
    private javax.swing.JLabel o6;
    private javax.swing.JLabel o7;
    private javax.swing.JLabel o8;
    private javax.swing.JLabel o9;
    private javax.swing.JTextField pID;
    private javax.swing.JLabel prcol;
    private javax.swing.JLabel prtyp;
    private javax.swing.JLabel prwt;
    private javax.swing.JComboBox<String> qual;
    private javax.swing.JTextField qual_append;
    private javax.swing.JCheckBox returned;
    private javax.swing.JTextField rolls1;
    private javax.swing.JComboBox<String> sCol;
    private javax.swing.JComboBox<String> sQual;
    private javax.swing.JComboBox<String> sYarn;
    private javax.swing.JPanel sidepanel;
    private javax.swing.JButton stockSummaryPrint;
    private javax.swing.JTextField stockid;
    private javax.swing.JComboBox<String> subcateg;
    private javax.swing.JComboBox<String> t1;
    private javax.swing.JTextField to1;
    private javax.swing.JTextField to2;
    private javax.swing.JLabel total_roll;
    private javax.swing.JLabel total_wt;
    private javax.swing.JTextField tpcs;
    private javax.swing.JTextField tpcs1;
    private javax.swing.JTextField twt;
    private javax.swing.JTextField tyard;
    private javax.swing.JPanel view_inventory;
    private javax.swing.JTextField wt1;
    private javax.swing.JTextField yFact;
    private javax.swing.JTextField yarn_append;
    // End of variables declaration//GEN-END:variables
}
